{"id":"node_modules/it-length-prefixed/src/int32BE-decode.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/it-length-prefixed/package.json","includedInParent":true,"mtime":1604854663745}],"generated":{"js":"'use strict'\n\nconst int32BEDecode = data => {\n  if (data.length < 4) throw RangeError('Could not decode int32BE')\n  return data.readInt32BE(0)\n}\n\nint32BEDecode.bytes = 4 // Always because fixed length\n\nmodule.exports = int32BEDecode\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/it-length-prefixed/src/int32BE-decode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/it-length-prefixed/src/int32BE-decode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/it-length-prefixed/src/int32BE-decode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/it-length-prefixed/src/int32BE-decode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/it-length-prefixed/src/int32BE-decode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/it-length-prefixed/src/int32BE-decode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/it-length-prefixed/src/int32BE-decode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/it-length-prefixed/src/int32BE-decode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/it-length-prefixed/src/int32BE-decode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/it-length-prefixed/src/int32BE-decode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/it-length-prefixed/src/int32BE-decode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}}],"sources":{"node_modules/it-length-prefixed/src/int32BE-decode.js":"'use strict'\n\nconst int32BEDecode = data => {\n  if (data.length < 4) throw RangeError('Could not decode int32BE')\n  return data.readInt32BE(0)\n}\n\nint32BEDecode.bytes = 4 // Always because fixed length\n\nmodule.exports = int32BEDecode\n"},"lineCount":11}},"error":null,"hash":"71eb0ab2e77eafeba31a433f5e1499cb","cacheData":{"env":{}}}