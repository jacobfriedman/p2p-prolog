{"id":"node_modules/protons/src/compile/decode.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protons/package.json","includedInParent":true,"mtime":1604854663745},{"name":"varint","loc":{"line":4,"column":23},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protons/src/compile/decode.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/varint/index.js"},{"name":"./utils","loc":{"line":5,"column":24},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protons/src/compile/decode.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protons/src/compile/utils.js"}],"generated":{"js":"/* eslint max-depth: 1 */\n'use strict'\n\nconst varint = require('varint')\nconst defined = require('./utils').defined\n\nfunction toSentenceCase (string) {\n  return `${string.substring(0, 1).toUpperCase()}${string.substring(1)}`\n}\n\nfunction addPropertyAccessors (obj, name, value, defaultValue) {\n  if (Object.prototype.hasOwnProperty.call(obj, name)) {\n    // have already added this property\n    return\n  }\n\n  const sentenceCaseName = toSentenceCase(name)\n\n  Object.defineProperties(obj, {\n    [name]: {\n      enumerable: true,\n      configurable: true,\n      set: (val) => {\n        value = val\n      },\n      get: () => {\n        if (value === undefined) {\n          return defaultValue\n        }\n\n        return value\n      }\n    },\n    [`has${sentenceCaseName}`]: {\n      configurable: true,\n      value: () => {\n        return value !== undefined\n      }\n    },\n    [`set${sentenceCaseName}`]: {\n      configurable: true,\n      value: (val) => {\n        value = val\n      }\n    },\n    [`get${sentenceCaseName}`]: {\n      configurable: true,\n      value: () => {\n        return value\n      }\n    },\n    [`clear${sentenceCaseName}`]: {\n      configurable: true,\n      value: () => {\n        value = undefined\n        obj[name] = undefined\n      }\n    }\n  })\n}\n\nfunction compileDecode (m, resolve, enc) {\n  const requiredFields = []\n  const fields = {}\n  const oneofFields = []\n  const vals = []\n\n  for (var i = 0; i < enc.length; i++) {\n    const field = m.fields[i]\n\n    fields[field.tag] = i\n\n    const def = field.options && field.options.default\n    const resolved = resolve(field.type, m.id, false)\n    vals[i] = [def, resolved && resolved.values]\n\n    m.fields[i].packed = field.repeated && field.options && field.options.packed && field.options.packed !== 'false'\n\n    if (field.required) {\n      requiredFields.push(field.name)\n    }\n\n    if (field.oneof) {\n      oneofFields.push(field.name)\n    }\n  }\n\n  function decodeField (e, field, obj, buf, dataView, offset, i) {\n    const name = field.name\n\n    if (field.oneof) {\n      // clear already defined oneof fields\n      const props = Object.keys(obj)\n      for (var j = 0; j < props.length; j++) {\n        if (oneofFields.indexOf(props[j]) > -1) {\n          const sentenceCase = toSentenceCase(props[j])\n          delete obj[`has${sentenceCase}`]\n          delete obj[`get${sentenceCase}`]\n          delete obj[`set${sentenceCase}`]\n          delete obj[`clear${sentenceCase}`]\n          delete obj[props[j]]\n        }\n      }\n    }\n\n    let value\n\n    if (e.message) {\n      const len = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n\n      const decoded = e.decode(buf, dataView, offset, offset + len)\n\n      if (field.map) {\n        value = obj[name] || {}\n        value[decoded.key] = decoded.value\n      } else if (field.repeated) {\n        value = obj[name] || []\n        value.push(decoded)\n      } else {\n        value = decoded\n      }\n    } else {\n      if (field.repeated) {\n        value = obj[name] || []\n        value.push(e.decode(buf, dataView, offset))\n      } else {\n        value = e.decode(buf, dataView, offset)\n      }\n    }\n\n    addPropertyAccessors(obj, name, value)\n\n    offset += e.decode.bytes\n\n    return offset\n  }\n\n  return function decode (buf, view, offset, end) {\n    if (offset == null) {\n      offset = 0\n    }\n\n    if (end == null) {\n      end = buf.length\n    }\n\n    if (!(end <= buf.length && offset <= buf.length)) {\n      throw new Error('Decoded message is not valid')\n    }\n\n    if (!view) {\n      view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    }\n\n    var oldOffset = offset\n    var obj = {}\n    var field\n\n    while (true) {\n      if (end <= offset) {\n        // finished\n\n        // check required methods\n        var name = ''\n        var j = 0\n        for (j = 0; j < requiredFields.length; j++) {\n          name = requiredFields[j]\n          if (!defined(obj[name])) {\n            throw new Error('Decoded message is not valid, missing required field: ' + name)\n          }\n        }\n\n        // fill out missing defaults\n        var val\n        var def\n        for (j = 0; j < enc.length; j++) {\n          field = m.fields[j]\n          def = vals[j][0]\n          val = vals[j][1]\n          name = field.name\n          let defaultVal\n\n          if (Object.prototype.hasOwnProperty.call(obj, name)) {\n            continue\n          }\n\n          var done = false\n\n          if (field.oneof) {\n            var props = Object.keys(obj)\n\n            for (var k = 0; k < props.length; k++) {\n              if (oneofFields.indexOf(props[k]) > -1) {\n                done = true\n                break\n              }\n            }\n          }\n\n          if (done) {\n            continue\n          }\n\n          if (val) { // is enum\n            if (field.repeated) {\n              def = []\n            } else {\n              def = (def && val[def]) ? val[def].value : val[Object.keys(val)[0]].value\n              def = parseInt(def || 0, 10)\n            }\n          } else {\n            defaultVal = defaultValue(field)\n            def = coerceValue(field, def)\n          }\n\n          addPropertyAccessors(obj, name, def, defaultVal)\n        }\n\n        decode.bytes = offset - oldOffset\n        return obj\n      }\n\n      var prefix = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n      var tag = prefix >> 3\n\n      var i = fields[tag]\n\n      if (i == null) {\n        offset = skip(prefix & 7, buf, view, offset)\n        continue\n      }\n\n      var e = enc[i]\n      field = m.fields[i]\n\n      if (field.packed) {\n        var packedEnd = varint.decode(buf, offset)\n        offset += varint.decode.bytes\n        packedEnd += offset\n\n        while (offset < packedEnd) {\n          offset = decodeField(e, field, obj, buf, view, offset, i)\n        }\n      } else {\n        offset = decodeField(e, field, obj, buf, view, offset, i)\n      }\n    }\n  }\n}\n\nvar skip = function (type, buffer, view, offset) {\n  switch (type) {\n    case 0:\n      varint.decode(buffer, offset)\n      return offset + varint.decode.bytes\n\n    case 1:\n      return offset + 8\n\n    case 2:\n      var len = varint.decode(buffer, offset)\n      return offset + varint.decode.bytes + len\n\n    case 3:\n    case 4:\n      throw new Error('Groups are not supported')\n\n    case 5:\n      return offset + 4\n    default:\n      throw new Error('Unknown wire type: ' + type)\n  }\n}\n\nvar defaultValue = function (f) {\n  if (f.map) return {}\n  if (f.repeated) return []\n\n  switch (f.type) {\n    case 'string':\n      return ''\n    case 'bool':\n      return false\n    case 'float':\n    case 'double':\n    case 'sfixed32':\n    case 'fixed32':\n    case 'varint':\n    case 'enum':\n    case 'uint64':\n    case 'uint32':\n    case 'int64':\n    case 'int32':\n    case 'sint64':\n    case 'sint32':\n      return 0\n    default:\n      return null\n  }\n}\n\nvar coerceValue = function (f, def) {\n  if (def === undefined) {\n    return def\n  }\n\n  switch (f.type) {\n    case 'bool':\n      return def === 'true'\n    case 'float':\n    case 'double':\n    case 'sfixed32':\n    case 'fixed32':\n    case 'varint':\n    case 'enum':\n    case 'uint64':\n    case 'uint32':\n    case 'int64':\n    case 'int32':\n    case 'sint64':\n    case 'sint32':\n      return parseInt(def, 10)\n    default:\n      return def\n  }\n}\n\nmodule.exports = compileDecode\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/protons/src/compile/decode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/protons/src/compile/decode.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}}],"sources":{"node_modules/protons/src/compile/decode.js":"/* eslint max-depth: 1 */\n'use strict'\n\nconst varint = require('varint')\nconst defined = require('./utils').defined\n\nfunction toSentenceCase (string) {\n  return `${string.substring(0, 1).toUpperCase()}${string.substring(1)}`\n}\n\nfunction addPropertyAccessors (obj, name, value, defaultValue) {\n  if (Object.prototype.hasOwnProperty.call(obj, name)) {\n    // have already added this property\n    return\n  }\n\n  const sentenceCaseName = toSentenceCase(name)\n\n  Object.defineProperties(obj, {\n    [name]: {\n      enumerable: true,\n      configurable: true,\n      set: (val) => {\n        value = val\n      },\n      get: () => {\n        if (value === undefined) {\n          return defaultValue\n        }\n\n        return value\n      }\n    },\n    [`has${sentenceCaseName}`]: {\n      configurable: true,\n      value: () => {\n        return value !== undefined\n      }\n    },\n    [`set${sentenceCaseName}`]: {\n      configurable: true,\n      value: (val) => {\n        value = val\n      }\n    },\n    [`get${sentenceCaseName}`]: {\n      configurable: true,\n      value: () => {\n        return value\n      }\n    },\n    [`clear${sentenceCaseName}`]: {\n      configurable: true,\n      value: () => {\n        value = undefined\n        obj[name] = undefined\n      }\n    }\n  })\n}\n\nfunction compileDecode (m, resolve, enc) {\n  const requiredFields = []\n  const fields = {}\n  const oneofFields = []\n  const vals = []\n\n  for (var i = 0; i < enc.length; i++) {\n    const field = m.fields[i]\n\n    fields[field.tag] = i\n\n    const def = field.options && field.options.default\n    const resolved = resolve(field.type, m.id, false)\n    vals[i] = [def, resolved && resolved.values]\n\n    m.fields[i].packed = field.repeated && field.options && field.options.packed && field.options.packed !== 'false'\n\n    if (field.required) {\n      requiredFields.push(field.name)\n    }\n\n    if (field.oneof) {\n      oneofFields.push(field.name)\n    }\n  }\n\n  function decodeField (e, field, obj, buf, dataView, offset, i) {\n    const name = field.name\n\n    if (field.oneof) {\n      // clear already defined oneof fields\n      const props = Object.keys(obj)\n      for (var j = 0; j < props.length; j++) {\n        if (oneofFields.indexOf(props[j]) > -1) {\n          const sentenceCase = toSentenceCase(props[j])\n          delete obj[`has${sentenceCase}`]\n          delete obj[`get${sentenceCase}`]\n          delete obj[`set${sentenceCase}`]\n          delete obj[`clear${sentenceCase}`]\n          delete obj[props[j]]\n        }\n      }\n    }\n\n    let value\n\n    if (e.message) {\n      const len = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n\n      const decoded = e.decode(buf, dataView, offset, offset + len)\n\n      if (field.map) {\n        value = obj[name] || {}\n        value[decoded.key] = decoded.value\n      } else if (field.repeated) {\n        value = obj[name] || []\n        value.push(decoded)\n      } else {\n        value = decoded\n      }\n    } else {\n      if (field.repeated) {\n        value = obj[name] || []\n        value.push(e.decode(buf, dataView, offset))\n      } else {\n        value = e.decode(buf, dataView, offset)\n      }\n    }\n\n    addPropertyAccessors(obj, name, value)\n\n    offset += e.decode.bytes\n\n    return offset\n  }\n\n  return function decode (buf, view, offset, end) {\n    if (offset == null) {\n      offset = 0\n    }\n\n    if (end == null) {\n      end = buf.length\n    }\n\n    if (!(end <= buf.length && offset <= buf.length)) {\n      throw new Error('Decoded message is not valid')\n    }\n\n    if (!view) {\n      view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    }\n\n    var oldOffset = offset\n    var obj = {}\n    var field\n\n    while (true) {\n      if (end <= offset) {\n        // finished\n\n        // check required methods\n        var name = ''\n        var j = 0\n        for (j = 0; j < requiredFields.length; j++) {\n          name = requiredFields[j]\n          if (!defined(obj[name])) {\n            throw new Error('Decoded message is not valid, missing required field: ' + name)\n          }\n        }\n\n        // fill out missing defaults\n        var val\n        var def\n        for (j = 0; j < enc.length; j++) {\n          field = m.fields[j]\n          def = vals[j][0]\n          val = vals[j][1]\n          name = field.name\n          let defaultVal\n\n          if (Object.prototype.hasOwnProperty.call(obj, name)) {\n            continue\n          }\n\n          var done = false\n\n          if (field.oneof) {\n            var props = Object.keys(obj)\n\n            for (var k = 0; k < props.length; k++) {\n              if (oneofFields.indexOf(props[k]) > -1) {\n                done = true\n                break\n              }\n            }\n          }\n\n          if (done) {\n            continue\n          }\n\n          if (val) { // is enum\n            if (field.repeated) {\n              def = []\n            } else {\n              def = (def && val[def]) ? val[def].value : val[Object.keys(val)[0]].value\n              def = parseInt(def || 0, 10)\n            }\n          } else {\n            defaultVal = defaultValue(field)\n            def = coerceValue(field, def)\n          }\n\n          addPropertyAccessors(obj, name, def, defaultVal)\n        }\n\n        decode.bytes = offset - oldOffset\n        return obj\n      }\n\n      var prefix = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n      var tag = prefix >> 3\n\n      var i = fields[tag]\n\n      if (i == null) {\n        offset = skip(prefix & 7, buf, view, offset)\n        continue\n      }\n\n      var e = enc[i]\n      field = m.fields[i]\n\n      if (field.packed) {\n        var packedEnd = varint.decode(buf, offset)\n        offset += varint.decode.bytes\n        packedEnd += offset\n\n        while (offset < packedEnd) {\n          offset = decodeField(e, field, obj, buf, view, offset, i)\n        }\n      } else {\n        offset = decodeField(e, field, obj, buf, view, offset, i)\n      }\n    }\n  }\n}\n\nvar skip = function (type, buffer, view, offset) {\n  switch (type) {\n    case 0:\n      varint.decode(buffer, offset)\n      return offset + varint.decode.bytes\n\n    case 1:\n      return offset + 8\n\n    case 2:\n      var len = varint.decode(buffer, offset)\n      return offset + varint.decode.bytes + len\n\n    case 3:\n    case 4:\n      throw new Error('Groups are not supported')\n\n    case 5:\n      return offset + 4\n    default:\n      throw new Error('Unknown wire type: ' + type)\n  }\n}\n\nvar defaultValue = function (f) {\n  if (f.map) return {}\n  if (f.repeated) return []\n\n  switch (f.type) {\n    case 'string':\n      return ''\n    case 'bool':\n      return false\n    case 'float':\n    case 'double':\n    case 'sfixed32':\n    case 'fixed32':\n    case 'varint':\n    case 'enum':\n    case 'uint64':\n    case 'uint32':\n    case 'int64':\n    case 'int32':\n    case 'sint64':\n    case 'sint32':\n      return 0\n    default:\n      return null\n  }\n}\n\nvar coerceValue = function (f, def) {\n  if (def === undefined) {\n    return def\n  }\n\n  switch (f.type) {\n    case 'bool':\n      return def === 'true'\n    case 'float':\n    case 'double':\n    case 'sfixed32':\n    case 'fixed32':\n    case 'varint':\n    case 'enum':\n    case 'uint64':\n    case 'uint32':\n    case 'int64':\n    case 'int32':\n    case 'sint64':\n    case 'sint32':\n      return parseInt(def, 10)\n    default:\n      return def\n  }\n}\n\nmodule.exports = compileDecode\n"},"lineCount":331}},"error":null,"hash":"4e71689666ea875bbf73b6a43259ffa8","cacheData":{"env":{}}}