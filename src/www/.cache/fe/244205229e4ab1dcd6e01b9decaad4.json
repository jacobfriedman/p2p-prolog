{"id":"node_modules/libp2p-mplex/src/message-types.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-mplex/package.json","includedInParent":true,"mtime":1604854753633}],"generated":{"js":"'use strict'\n\nconst MessageTypes = Object.freeze({\n  NEW_STREAM: 0,\n  MESSAGE_RECEIVER: 1,\n  MESSAGE_INITIATOR: 2,\n  CLOSE_RECEIVER: 3,\n  CLOSE_INITIATOR: 4,\n  RESET_RECEIVER: 5,\n  RESET_INITIATOR: 6\n})\n\nexports.MessageTypes = MessageTypes\n\nexports.InitiatorMessageTypes = Object.freeze({\n  NEW_STREAM: MessageTypes.NEW_STREAM,\n  MESSAGE: MessageTypes.MESSAGE_INITIATOR,\n  CLOSE: MessageTypes.CLOSE_INITIATOR,\n  RESET: MessageTypes.RESET_INITIATOR\n})\n\nexports.ReceiverMessageTypes = Object.freeze({\n  MESSAGE: MessageTypes.MESSAGE_RECEIVER,\n  CLOSE: MessageTypes.CLOSE_RECEIVER,\n  RESET: MessageTypes.RESET_RECEIVER\n})\n\nexports.MessageTypeNames = Object.freeze(\n  Object.entries(MessageTypes).reduce((obj, e) => {\n    obj[e[1]] = e[0]\n    return obj\n  }, {})\n)\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/libp2p-mplex/src/message-types.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"node_modules/libp2p-mplex/src/message-types.js":"'use strict'\n\nconst MessageTypes = Object.freeze({\n  NEW_STREAM: 0,\n  MESSAGE_RECEIVER: 1,\n  MESSAGE_INITIATOR: 2,\n  CLOSE_RECEIVER: 3,\n  CLOSE_INITIATOR: 4,\n  RESET_RECEIVER: 5,\n  RESET_INITIATOR: 6\n})\n\nexports.MessageTypes = MessageTypes\n\nexports.InitiatorMessageTypes = Object.freeze({\n  NEW_STREAM: MessageTypes.NEW_STREAM,\n  MESSAGE: MessageTypes.MESSAGE_INITIATOR,\n  CLOSE: MessageTypes.CLOSE_INITIATOR,\n  RESET: MessageTypes.RESET_INITIATOR\n})\n\nexports.ReceiverMessageTypes = Object.freeze({\n  MESSAGE: MessageTypes.MESSAGE_RECEIVER,\n  CLOSE: MessageTypes.CLOSE_RECEIVER,\n  RESET: MessageTypes.RESET_RECEIVER\n})\n\nexports.MessageTypeNames = Object.freeze(\n  Object.entries(MessageTypes).reduce((obj, e) => {\n    obj[e[1]] = e[0]\n    return obj\n  }, {})\n)\n"},"lineCount":34}},"error":null,"hash":"132a0167867c2cde924c6b638a40bdc0","cacheData":{"env":{}}}