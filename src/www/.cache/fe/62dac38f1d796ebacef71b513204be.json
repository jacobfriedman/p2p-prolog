{"id":"node_modules/p-fifo/index.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/p-fifo/package.json","includedInParent":true,"mtime":1604854663817},{"name":"fast-fifo","loc":{"line":1,"column":21},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/p-fifo/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/fast-fifo/index.js"},{"name":"p-defer","loc":{"line":2,"column":22},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/p-fifo/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/p-defer/index.js"}],"generated":{"js":"const Fifo = require('fast-fifo')\nconst defer = require('p-defer')\n\nmodule.exports = class PFifo {\n  constructor () {\n    this._buffer = new Fifo()\n    this._waitingConsumers = new Fifo()\n  }\n\n  push (chunk) {\n    const { promise, resolve } = defer()\n    this._buffer.push({ chunk, resolve })\n    this._consume()\n    return promise\n  }\n\n  _consume () {\n    while (!this._waitingConsumers.isEmpty() && !this._buffer.isEmpty()) {\n      const nextConsumer = this._waitingConsumers.shift()\n      const nextChunk = this._buffer.shift()\n      nextConsumer.resolve(nextChunk.chunk)\n      nextChunk.resolve()\n    }\n  }\n\n  shift () {\n    const { promise, resolve } = defer()\n    this._waitingConsumers.push({ resolve })\n    this._consume()\n    return promise\n  }\n\n  isEmpty () {\n    return this._buffer.isEmpty()\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/p-fifo/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/p-fifo/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}}],"sources":{"node_modules/p-fifo/index.js":"const Fifo = require('fast-fifo')\nconst defer = require('p-defer')\n\nmodule.exports = class PFifo {\n  constructor () {\n    this._buffer = new Fifo()\n    this._waitingConsumers = new Fifo()\n  }\n\n  push (chunk) {\n    const { promise, resolve } = defer()\n    this._buffer.push({ chunk, resolve })\n    this._consume()\n    return promise\n  }\n\n  _consume () {\n    while (!this._waitingConsumers.isEmpty() && !this._buffer.isEmpty()) {\n      const nextConsumer = this._waitingConsumers.shift()\n      const nextChunk = this._buffer.shift()\n      nextConsumer.resolve(nextChunk.chunk)\n      nextChunk.resolve()\n    }\n  }\n\n  shift () {\n    const { promise, resolve } = defer()\n    this._waitingConsumers.push({ resolve })\n    this._consume()\n    return promise\n  }\n\n  isEmpty () {\n    return this._buffer.isEmpty()\n  }\n}\n"},"lineCount":37}},"error":null,"hash":"5d2778b85b1885da623ae1e046806934","cacheData":{"env":{}}}