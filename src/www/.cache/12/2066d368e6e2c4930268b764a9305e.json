{"id":"node_modules/multiaddr/src/codec.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/package.json","includedInParent":true,"mtime":1604854663745},{"name":"./convert","loc":{"line":3,"column":24},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/codec.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/convert.js"},{"name":"./protocols-table","loc":{"line":4,"column":26},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/codec.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/protocols-table.js"},{"name":"varint","loc":{"line":5,"column":23},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/codec.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/varint/index.js"},{"name":"uint8arrays/concat","loc":{"line":6,"column":33},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/codec.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/uint8arrays/concat.js"},{"name":"uint8arrays/to-string","loc":{"line":7,"column":35},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/codec.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/uint8arrays/to-string.js"}],"generated":{"js":"'use strict'\n\nconst convert = require('./convert')\nconst protocols = require('./protocols-table')\nconst varint = require('varint')\nconst uint8ArrayConcat = require('uint8arrays/concat')\nconst uint8ArrayToString = require('uint8arrays/to-string')\n\n// export codec\nmodule.exports = {\n  stringToStringTuples,\n  stringTuplesToString,\n\n  tuplesToStringTuples,\n  stringTuplesToTuples,\n\n  bytesToTuples,\n  tuplesToBytes,\n\n  bytesToString,\n  stringToBytes,\n\n  fromString,\n  fromBytes,\n  validateBytes,\n  isValidBytes,\n  cleanPath,\n\n  ParseError,\n  protoFromTuple,\n\n  sizeForAddr\n}\n\n// string -> [[str name, str addr]... ]\nfunction stringToStringTuples (str) {\n  const tuples = []\n  const parts = str.split('/').slice(1) // skip first empty elem\n  if (parts.length === 1 && parts[0] === '') {\n    return []\n  }\n\n  for (let p = 0; p < parts.length; p++) {\n    const part = parts[p]\n    const proto = protocols(part)\n\n    if (proto.size === 0) {\n      tuples.push([part])\n      continue\n    }\n\n    p++ // advance addr part\n    if (p >= parts.length) {\n      throw ParseError('invalid address: ' + str)\n    }\n\n    // if it's a path proto, take the rest\n    if (proto.path) {\n      tuples.push([\n        part,\n        // TODO: should we need to check each path part to see if it's a proto?\n        // This would allow for other protocols to be added after a unix path,\n        // however it would have issues if the path had a protocol name in the path\n        cleanPath(parts.slice(p).join('/'))\n      ])\n      break\n    }\n\n    tuples.push([part, parts[p]])\n  }\n\n  return tuples\n}\n\n// [[str name, str addr]... ] -> string\nfunction stringTuplesToString (tuples) {\n  const parts = []\n  tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    parts.push(proto.name)\n    if (tup.length > 1) {\n      parts.push(tup[1])\n    }\n  })\n\n  return cleanPath(parts.join('/'))\n}\n\n// [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\nfunction stringTuplesToTuples (tuples) {\n  return tuples.map(tup => {\n    if (!Array.isArray(tup)) {\n      tup = [tup]\n    }\n    const proto = protoFromTuple(tup)\n    if (tup.length > 1) {\n      return [proto.code, convert.toBytes(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n// [[int code, Uint8Array]... ] -> [[str name, str addr]... ]\nfunction tuplesToStringTuples (tuples) {\n  return tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    if (tup.length > 1) {\n      return [proto.code, convert.toString(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n// [[int code, Uint8Array ]... ] -> Uint8Array\nfunction tuplesToBytes (tuples) {\n  return fromBytes(uint8ArrayConcat(tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    let buf = Uint8Array.from(varint.encode(proto.code))\n\n    if (tup.length > 1) {\n      buf = uint8ArrayConcat([buf, tup[1]]) // add address buffer\n    }\n\n    return buf\n  })))\n}\n\nfunction sizeForAddr (p, addr) {\n  if (p.size > 0) {\n    return p.size / 8\n  } else if (p.size === 0) {\n    return 0\n  } else {\n    const size = varint.decode(addr)\n    return size + varint.decode.bytes\n  }\n}\n\n// Uint8Array -> [[int code, Uint8Array ]... ]\nfunction bytesToTuples (buf) {\n  const tuples = []\n  let i = 0\n  while (i < buf.length) {\n    const code = varint.decode(buf, i)\n    const n = varint.decode.bytes\n\n    const p = protocols(code)\n\n    const size = sizeForAddr(p, buf.slice(i + n))\n\n    if (size === 0) {\n      tuples.push([code])\n      i += n\n      continue\n    }\n\n    const addr = buf.slice(i + n, i + n + size)\n\n    i += (size + n)\n\n    if (i > buf.length) { // did not end _exactly_ at buffer.length\n      throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'))\n    }\n\n    // ok, tuple seems good.\n    tuples.push([code, addr])\n  }\n\n  return tuples\n}\n\n// Uint8Array -> String\nfunction bytesToString (buf) {\n  const a = bytesToTuples(buf)\n  const b = tuplesToStringTuples(a)\n  return stringTuplesToString(b)\n}\n\n// String -> Uint8Array\nfunction stringToBytes (str) {\n  str = cleanPath(str)\n  const a = stringToStringTuples(str)\n  const b = stringTuplesToTuples(a)\n\n  return tuplesToBytes(b)\n}\n\n// String -> Uint8Array\nfunction fromString (str) {\n  return stringToBytes(str)\n}\n\n// Uint8Array -> Uint8Array\nfunction fromBytes (buf) {\n  const err = validateBytes(buf)\n  if (err) throw err\n  return Uint8Array.from(buf) // copy\n}\n\nfunction validateBytes (buf) {\n  try {\n    bytesToTuples(buf) // try to parse. will throw if breaks\n  } catch (err) {\n    return err\n  }\n}\n\nfunction isValidBytes (buf) {\n  return validateBytes(buf) === undefined\n}\n\nfunction cleanPath (str) {\n  return '/' + str.trim().split('/').filter(a => a).join('/')\n}\n\nfunction ParseError (str) {\n  return new Error('Error parsing address: ' + str)\n}\n\nfunction protoFromTuple (tup) {\n  const proto = protocols(tup[0])\n  return proto\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/multiaddr/src/codec.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/multiaddr/src/codec.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}}],"sources":{"node_modules/multiaddr/src/codec.js":"'use strict'\n\nconst convert = require('./convert')\nconst protocols = require('./protocols-table')\nconst varint = require('varint')\nconst uint8ArrayConcat = require('uint8arrays/concat')\nconst uint8ArrayToString = require('uint8arrays/to-string')\n\n// export codec\nmodule.exports = {\n  stringToStringTuples,\n  stringTuplesToString,\n\n  tuplesToStringTuples,\n  stringTuplesToTuples,\n\n  bytesToTuples,\n  tuplesToBytes,\n\n  bytesToString,\n  stringToBytes,\n\n  fromString,\n  fromBytes,\n  validateBytes,\n  isValidBytes,\n  cleanPath,\n\n  ParseError,\n  protoFromTuple,\n\n  sizeForAddr\n}\n\n// string -> [[str name, str addr]... ]\nfunction stringToStringTuples (str) {\n  const tuples = []\n  const parts = str.split('/').slice(1) // skip first empty elem\n  if (parts.length === 1 && parts[0] === '') {\n    return []\n  }\n\n  for (let p = 0; p < parts.length; p++) {\n    const part = parts[p]\n    const proto = protocols(part)\n\n    if (proto.size === 0) {\n      tuples.push([part])\n      continue\n    }\n\n    p++ // advance addr part\n    if (p >= parts.length) {\n      throw ParseError('invalid address: ' + str)\n    }\n\n    // if it's a path proto, take the rest\n    if (proto.path) {\n      tuples.push([\n        part,\n        // TODO: should we need to check each path part to see if it's a proto?\n        // This would allow for other protocols to be added after a unix path,\n        // however it would have issues if the path had a protocol name in the path\n        cleanPath(parts.slice(p).join('/'))\n      ])\n      break\n    }\n\n    tuples.push([part, parts[p]])\n  }\n\n  return tuples\n}\n\n// [[str name, str addr]... ] -> string\nfunction stringTuplesToString (tuples) {\n  const parts = []\n  tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    parts.push(proto.name)\n    if (tup.length > 1) {\n      parts.push(tup[1])\n    }\n  })\n\n  return cleanPath(parts.join('/'))\n}\n\n// [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\nfunction stringTuplesToTuples (tuples) {\n  return tuples.map(tup => {\n    if (!Array.isArray(tup)) {\n      tup = [tup]\n    }\n    const proto = protoFromTuple(tup)\n    if (tup.length > 1) {\n      return [proto.code, convert.toBytes(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n// [[int code, Uint8Array]... ] -> [[str name, str addr]... ]\nfunction tuplesToStringTuples (tuples) {\n  return tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    if (tup.length > 1) {\n      return [proto.code, convert.toString(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n// [[int code, Uint8Array ]... ] -> Uint8Array\nfunction tuplesToBytes (tuples) {\n  return fromBytes(uint8ArrayConcat(tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    let buf = Uint8Array.from(varint.encode(proto.code))\n\n    if (tup.length > 1) {\n      buf = uint8ArrayConcat([buf, tup[1]]) // add address buffer\n    }\n\n    return buf\n  })))\n}\n\nfunction sizeForAddr (p, addr) {\n  if (p.size > 0) {\n    return p.size / 8\n  } else if (p.size === 0) {\n    return 0\n  } else {\n    const size = varint.decode(addr)\n    return size + varint.decode.bytes\n  }\n}\n\n// Uint8Array -> [[int code, Uint8Array ]... ]\nfunction bytesToTuples (buf) {\n  const tuples = []\n  let i = 0\n  while (i < buf.length) {\n    const code = varint.decode(buf, i)\n    const n = varint.decode.bytes\n\n    const p = protocols(code)\n\n    const size = sizeForAddr(p, buf.slice(i + n))\n\n    if (size === 0) {\n      tuples.push([code])\n      i += n\n      continue\n    }\n\n    const addr = buf.slice(i + n, i + n + size)\n\n    i += (size + n)\n\n    if (i > buf.length) { // did not end _exactly_ at buffer.length\n      throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'))\n    }\n\n    // ok, tuple seems good.\n    tuples.push([code, addr])\n  }\n\n  return tuples\n}\n\n// Uint8Array -> String\nfunction bytesToString (buf) {\n  const a = bytesToTuples(buf)\n  const b = tuplesToStringTuples(a)\n  return stringTuplesToString(b)\n}\n\n// String -> Uint8Array\nfunction stringToBytes (str) {\n  str = cleanPath(str)\n  const a = stringToStringTuples(str)\n  const b = stringTuplesToTuples(a)\n\n  return tuplesToBytes(b)\n}\n\n// String -> Uint8Array\nfunction fromString (str) {\n  return stringToBytes(str)\n}\n\n// Uint8Array -> Uint8Array\nfunction fromBytes (buf) {\n  const err = validateBytes(buf)\n  if (err) throw err\n  return Uint8Array.from(buf) // copy\n}\n\nfunction validateBytes (buf) {\n  try {\n    bytesToTuples(buf) // try to parse. will throw if breaks\n  } catch (err) {\n    return err\n  }\n}\n\nfunction isValidBytes (buf) {\n  return validateBytes(buf) === undefined\n}\n\nfunction cleanPath (str) {\n  return '/' + str.trim().split('/').filter(a => a).join('/')\n}\n\nfunction ParseError (str) {\n  return new Error('Error parsing address: ' + str)\n}\n\nfunction protoFromTuple (tup) {\n  const proto = protocols(tup[0])\n  return proto\n}\n"},"lineCount":224}},"error":null,"hash":"e8f7a8c4bae95e146aed1f18cc7d4c24","cacheData":{"env":{}}}