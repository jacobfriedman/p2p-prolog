{"id":"node_modules/protons/src/compile/encodings/bool.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protons/package.json","includedInParent":true,"mtime":1604854663745},{"name":"./encoder","loc":{"line":3,"column":24},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protons/src/compile/encodings/bool.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protons/src/compile/encodings/encoder.js"}],"generated":{"js":"'use strict'\n\nconst encoder = require('./encoder')\n\nfunction boolEncodingLength () {\n  return 1\n}\n\nfunction boolEncode (value, buffer, dataView, offset) {\n  buffer[offset] = value ? 1 : 0\n  boolEncode.bytes = 1\n}\n\nfunction boolDecode (buffer, dataView, offset) {\n  const bool = buffer[offset] > 0\n  boolDecode.bytes = 1\n\n  return bool\n}\n\nmodule.exports = encoder(0, boolEncode, boolDecode, boolEncodingLength)\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/protons/src/compile/encodings/bool.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}}],"sources":{"node_modules/protons/src/compile/encodings/bool.js":"'use strict'\n\nconst encoder = require('./encoder')\n\nfunction boolEncodingLength () {\n  return 1\n}\n\nfunction boolEncode (value, buffer, dataView, offset) {\n  buffer[offset] = value ? 1 : 0\n  boolEncode.bytes = 1\n}\n\nfunction boolDecode (buffer, dataView, offset) {\n  const bool = buffer[offset] > 0\n  boolDecode.bytes = 1\n\n  return bool\n}\n\nmodule.exports = encoder(0, boolEncode, boolDecode, boolEncodingLength)\n"},"lineCount":22}},"error":null,"hash":"9b2e16510e1837012155374b6caeef53","cacheData":{"env":{}}}