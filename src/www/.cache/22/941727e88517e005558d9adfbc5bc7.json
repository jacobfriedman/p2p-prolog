{"id":"node_modules/protobufjs/src/util/minimal.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protobufjs/package.json","includedInParent":true,"mtime":1604854764649},{"name":"@protobufjs/aspromise","loc":{"line":5,"column":25},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protobufjs/src/util/minimal.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/@protobufjs/aspromise/index.js"},{"name":"@protobufjs/base64","loc":{"line":8,"column":22},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protobufjs/src/util/minimal.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/@protobufjs/base64/index.js"},{"name":"@protobufjs/eventemitter","loc":{"line":11,"column":28},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protobufjs/src/util/minimal.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/@protobufjs/eventemitter/index.js"},{"name":"@protobufjs/float","loc":{"line":14,"column":21},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protobufjs/src/util/minimal.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/@protobufjs/float/index.js"},{"name":"@protobufjs/inquire","loc":{"line":17,"column":23},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protobufjs/src/util/minimal.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/@protobufjs/inquire/index.js"},{"name":"@protobufjs/utf8","loc":{"line":20,"column":20},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protobufjs/src/util/minimal.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/@protobufjs/utf8/index.js"},{"name":"@protobufjs/pool","loc":{"line":23,"column":20},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protobufjs/src/util/minimal.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/@protobufjs/pool/index.js"},{"name":"./longbits","loc":{"line":26,"column":24},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protobufjs/src/util/minimal.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protobufjs/src/util/longbits.js"},{"name":"buffer","parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protobufjs/src/util/minimal.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/node-libs-browser/node_modules/buffer/index.js"}],"generated":{"js":"var global = arguments[3];\nvar Buffer = require(\"buffer\").Buffer;\n\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}}],"sources":{"node_modules/protobufjs/src/util/minimal.js":"\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n"},"lineCount":424}},"error":null,"hash":"79ab6f41328071925fce013bd9e4d3b2","cacheData":{"env":{}}}