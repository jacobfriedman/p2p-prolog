{"id":"node_modules/libp2p-websockets/src/index.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-websockets/package.json","includedInParent":true,"mtime":1604854741185},{"name":"it-ws/client","loc":{"line":3,"column":24},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-websockets/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/it-ws/client.js"},{"name":"mafmt","loc":{"line":4,"column":22},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-websockets/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/mafmt/src/index.js"},{"name":"class-is","loc":{"line":5,"column":23},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-websockets/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/class-is/index.js"},{"name":"multiaddr-to-uri","loc":{"line":6,"column":22},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-websockets/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr-to-uri/index.js"},{"name":"abortable-iterator","loc":{"line":7,"column":31},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-websockets/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/abortable-iterator/index.js"},{"name":"debug","loc":{"line":9,"column":20},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-websockets/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/debug/src/browser.js"},{"name":"./listener","loc":{"line":11,"column":31},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-websockets/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-websockets/src/listener.js"},{"name":"./socket-to-conn","loc":{"line":12,"column":29},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-websockets/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-websockets/src/socket-to-conn.js"},{"name":"./constants","loc":{"line":13,"column":43},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-websockets/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-websockets/src/constants.js"}],"generated":{"js":"'use strict'\n\nconst connect = require('it-ws/client')\nconst mafmt = require('mafmt')\nconst withIs = require('class-is')\nconst toUri = require('multiaddr-to-uri')\nconst { AbortError } = require('abortable-iterator')\n\nconst log = require('debug')('libp2p:websockets')\n\nconst createListener = require('./listener')\nconst toConnection = require('./socket-to-conn')\nconst { CODE_CIRCUIT, CODE_P2P } = require('./constants')\n\n/**\n * @class WebSockets\n */\nclass WebSockets {\n  /**\n   * @constructor\n   * @param {object} options\n   * @param {Upgrader} options.upgrader\n   */\n  constructor ({ upgrader }) {\n    if (!upgrader) {\n      throw new Error('An upgrader must be provided. See https://github.com/libp2p/interface-transport#upgrader.')\n    }\n    this._upgrader = upgrader\n  }\n\n  /**\n   * @async\n   * @param {Multiaddr} ma\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] Used to abort dial requests\n   * @returns {Connection} An upgraded Connection\n   */\n  async dial (ma, options = {}) {\n    log('dialing %s', ma)\n\n    const socket = await this._connect(ma, options)\n    const maConn = toConnection(socket, { remoteAddr: ma, signal: options.signal })\n    log('new outbound connection %s', maConn.remoteAddr)\n\n    const conn = await this._upgrader.upgradeOutbound(maConn)\n    log('outbound connection %s upgraded', maConn.remoteAddr)\n    return conn\n  }\n\n  /**\n   * @private\n   * @param {Multiaddr} ma\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] Used to abort dial requests\n   * @returns {Promise<WebSocket>} Resolves a extended duplex iterable on top of a WebSocket\n   */\n  async _connect (ma, options = {}) {\n    if (options.signal && options.signal.aborted) {\n      throw new AbortError()\n    }\n    const cOpts = ma.toOptions()\n    log('dialing %s:%s', cOpts.host, cOpts.port)\n\n    const rawSocket = connect(toUri(ma), Object.assign({ binary: true }, options))\n\n    if (!options.signal) {\n      await rawSocket.connected()\n\n      log('connected %s', ma)\n      return rawSocket\n    }\n\n    // Allow abort via signal during connect\n    let onAbort\n    const abort = new Promise((resolve, reject) => {\n      onAbort = () => {\n        reject(new AbortError())\n        rawSocket.close()\n      }\n\n      // Already aborted?\n      if (options.signal.aborted) return onAbort()\n      options.signal.addEventListener('abort', onAbort)\n    })\n\n    try {\n      await Promise.race([abort, rawSocket.connected()])\n    } finally {\n      options.signal.removeEventListener('abort', onAbort)\n    }\n\n    log('connected %s', ma)\n    return rawSocket\n  }\n\n  /**\n   * Creates a Websockets listener. The provided `handler` function will be called\n   * anytime a new incoming Connection has been successfully upgraded via\n   * `upgrader.upgradeInbound`.\n   * @param {object} [options]\n   * @param {http.Server} [options.server] A pre-created Node.js HTTP/S server.\n   * @param {function (Connection)} handler\n   * @returns {Listener} A Websockets listener\n   */\n  createListener (options = {}, handler) {\n    if (typeof options === 'function') {\n      handler = options\n      options = {}\n    }\n\n    return createListener({ handler, upgrader: this._upgrader }, options)\n  }\n\n  /**\n   * Takes a list of `Multiaddr`s and returns only valid Websockets addresses\n   * @param {Multiaddr[]} multiaddrs\n   * @returns {Multiaddr[]} Valid Websockets multiaddrs\n   */\n  filter (multiaddrs) {\n    multiaddrs = Array.isArray(multiaddrs) ? multiaddrs : [multiaddrs]\n\n    return multiaddrs.filter((ma) => {\n      if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n        return false\n      }\n\n      return mafmt.WebSockets.matches(ma.decapsulateCode(CODE_P2P)) ||\n        mafmt.WebSocketsSecure.matches(ma.decapsulateCode(CODE_P2P))\n    })\n  }\n}\n\nmodule.exports = withIs(WebSockets, {\n  className: 'WebSockets',\n  symbolName: '@libp2p/js-libp2p-websockets/websockets'\n})\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/libp2p-websockets/src/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}}],"sources":{"node_modules/libp2p-websockets/src/index.js":"'use strict'\n\nconst connect = require('it-ws/client')\nconst mafmt = require('mafmt')\nconst withIs = require('class-is')\nconst toUri = require('multiaddr-to-uri')\nconst { AbortError } = require('abortable-iterator')\n\nconst log = require('debug')('libp2p:websockets')\n\nconst createListener = require('./listener')\nconst toConnection = require('./socket-to-conn')\nconst { CODE_CIRCUIT, CODE_P2P } = require('./constants')\n\n/**\n * @class WebSockets\n */\nclass WebSockets {\n  /**\n   * @constructor\n   * @param {object} options\n   * @param {Upgrader} options.upgrader\n   */\n  constructor ({ upgrader }) {\n    if (!upgrader) {\n      throw new Error('An upgrader must be provided. See https://github.com/libp2p/interface-transport#upgrader.')\n    }\n    this._upgrader = upgrader\n  }\n\n  /**\n   * @async\n   * @param {Multiaddr} ma\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] Used to abort dial requests\n   * @returns {Connection} An upgraded Connection\n   */\n  async dial (ma, options = {}) {\n    log('dialing %s', ma)\n\n    const socket = await this._connect(ma, options)\n    const maConn = toConnection(socket, { remoteAddr: ma, signal: options.signal })\n    log('new outbound connection %s', maConn.remoteAddr)\n\n    const conn = await this._upgrader.upgradeOutbound(maConn)\n    log('outbound connection %s upgraded', maConn.remoteAddr)\n    return conn\n  }\n\n  /**\n   * @private\n   * @param {Multiaddr} ma\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] Used to abort dial requests\n   * @returns {Promise<WebSocket>} Resolves a extended duplex iterable on top of a WebSocket\n   */\n  async _connect (ma, options = {}) {\n    if (options.signal && options.signal.aborted) {\n      throw new AbortError()\n    }\n    const cOpts = ma.toOptions()\n    log('dialing %s:%s', cOpts.host, cOpts.port)\n\n    const rawSocket = connect(toUri(ma), Object.assign({ binary: true }, options))\n\n    if (!options.signal) {\n      await rawSocket.connected()\n\n      log('connected %s', ma)\n      return rawSocket\n    }\n\n    // Allow abort via signal during connect\n    let onAbort\n    const abort = new Promise((resolve, reject) => {\n      onAbort = () => {\n        reject(new AbortError())\n        rawSocket.close()\n      }\n\n      // Already aborted?\n      if (options.signal.aborted) return onAbort()\n      options.signal.addEventListener('abort', onAbort)\n    })\n\n    try {\n      await Promise.race([abort, rawSocket.connected()])\n    } finally {\n      options.signal.removeEventListener('abort', onAbort)\n    }\n\n    log('connected %s', ma)\n    return rawSocket\n  }\n\n  /**\n   * Creates a Websockets listener. The provided `handler` function will be called\n   * anytime a new incoming Connection has been successfully upgraded via\n   * `upgrader.upgradeInbound`.\n   * @param {object} [options]\n   * @param {http.Server} [options.server] A pre-created Node.js HTTP/S server.\n   * @param {function (Connection)} handler\n   * @returns {Listener} A Websockets listener\n   */\n  createListener (options = {}, handler) {\n    if (typeof options === 'function') {\n      handler = options\n      options = {}\n    }\n\n    return createListener({ handler, upgrader: this._upgrader }, options)\n  }\n\n  /**\n   * Takes a list of `Multiaddr`s and returns only valid Websockets addresses\n   * @param {Multiaddr[]} multiaddrs\n   * @returns {Multiaddr[]} Valid Websockets multiaddrs\n   */\n  filter (multiaddrs) {\n    multiaddrs = Array.isArray(multiaddrs) ? multiaddrs : [multiaddrs]\n\n    return multiaddrs.filter((ma) => {\n      if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n        return false\n      }\n\n      return mafmt.WebSockets.matches(ma.decapsulateCode(CODE_P2P)) ||\n        mafmt.WebSocketsSecure.matches(ma.decapsulateCode(CODE_P2P))\n    })\n  }\n}\n\nmodule.exports = withIs(WebSockets, {\n  className: 'WebSockets',\n  symbolName: '@libp2p/js-libp2p-websockets/websockets'\n})\n"},"lineCount":137}},"error":null,"hash":"8ace44a4bd3fb01be0962183780cae61","cacheData":{"env":{}}}