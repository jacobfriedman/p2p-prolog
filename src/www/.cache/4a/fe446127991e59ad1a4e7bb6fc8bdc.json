{"id":"node_modules/it-handshake/src/index.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/it-handshake/package.json","includedInParent":true,"mtime":1604854663745},{"name":"it-reader","loc":{"line":3,"column":23},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/it-handshake/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/it-reader/index.js"},{"name":"it-pushable","loc":{"line":4,"column":23},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/it-handshake/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/it-pushable/index.js"},{"name":"p-defer","loc":{"line":5,"column":22},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/it-handshake/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/p-defer/index.js"}],"generated":{"js":"'use strict'\n\nconst Reader = require('it-reader')\nconst Writer = require('it-pushable')\nconst defer = require('p-defer')\n\n// Convert a duplex stream into a reader and writer and rest stream\nmodule.exports = stream => {\n  const writer = Writer() // Write bytes on demand to the sink\n  const reader = Reader(stream.source) // Read bytes on demand from the source\n\n  // Waits for a source to be passed to the rest stream's sink\n  const sourcePromise = defer()\n  let sinkErr\n\n  const sinkPromise = stream.sink((async function * () {\n    yield * writer\n    const source = await sourcePromise.promise\n    yield * source\n  })())\n\n  sinkPromise.catch(err => {\n    sinkErr = err\n  })\n\n  const rest = {\n    sink: source => {\n      if (sinkErr) {\n        return Promise.reject(sinkErr)\n      }\n\n      sourcePromise.resolve(source)\n      return sinkPromise\n    },\n    source: reader\n  }\n\n  return {\n    reader,\n    writer,\n    stream: rest,\n    rest: () => writer.end(),\n    write: writer.push,\n    read: async () => {\n      return (await reader.next()).value\n    }\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/it-handshake/src/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/it-handshake/src/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}}],"sources":{"node_modules/it-handshake/src/index.js":"'use strict'\n\nconst Reader = require('it-reader')\nconst Writer = require('it-pushable')\nconst defer = require('p-defer')\n\n// Convert a duplex stream into a reader and writer and rest stream\nmodule.exports = stream => {\n  const writer = Writer() // Write bytes on demand to the sink\n  const reader = Reader(stream.source) // Read bytes on demand from the source\n\n  // Waits for a source to be passed to the rest stream's sink\n  const sourcePromise = defer()\n  let sinkErr\n\n  const sinkPromise = stream.sink((async function * () {\n    yield * writer\n    const source = await sourcePromise.promise\n    yield * source\n  })())\n\n  sinkPromise.catch(err => {\n    sinkErr = err\n  })\n\n  const rest = {\n    sink: source => {\n      if (sinkErr) {\n        return Promise.reject(sinkErr)\n      }\n\n      sourcePromise.resolve(source)\n      return sinkPromise\n    },\n    source: reader\n  }\n\n  return {\n    reader,\n    writer,\n    stream: rest,\n    rest: () => writer.end(),\n    write: writer.push,\n    read: async () => {\n      return (await reader.next()).value\n    }\n  }\n}\n"},"lineCount":49}},"error":null,"hash":"d8b3c417e0db406381452456bb263547","cacheData":{"env":{}}}