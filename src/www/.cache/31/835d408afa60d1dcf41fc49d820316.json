{"id":"node_modules/interface-datastore/src/key.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/interface-datastore/package.json","includedInParent":true,"mtime":1604854663745},{"name":"nanoid","loc":{"line":3,"column":27},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/interface-datastore/src/key.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/nanoid/index.browser.js"},{"name":"class-is","loc":{"line":4,"column":23},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/interface-datastore/src/key.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/class-is/index.js"},{"name":"./utils","loc":{"line":5,"column":45},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/interface-datastore/src/key.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/interface-datastore/src/utils.js"},{"name":"ipfs-utils/src/text-decoder","loc":{"line":6,"column":28},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/interface-datastore/src/key.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/ipfs-utils/src/text-decoder.browser.js"}],"generated":{"js":"'use strict'\n\nconst { nanoid } = require('nanoid')\nconst withIs = require('class-is')\nconst { utf8Encoder, utf8Decoder } = require('./utils')\nconst TextDecoder = require('ipfs-utils/src/text-decoder')\n\nconst pathSepS = '/'\nconst pathSepB = utf8Encoder.encode(pathSepS)\nconst pathSep = pathSepB[0]\n\n/**\n * A Key represents the unique identifier of an object.\n * Our Key scheme is inspired by file systems and Google App Engine key model.\n * Keys are meant to be unique across a system. Keys are hierarchical,\n * incorporating more and more specific namespaces. Thus keys can be deemed\n * 'children' or 'ancestors' of other keys:\n * - `new Key('/Comedy')`\n * - `new Key('/Comedy/MontyPython')`\n * Also, every namespace can be parametrized to embed relevant object\n * information. For example, the Key `name` (most specific namespace) could\n * include the object type:\n * - `new Key('/Comedy/MontyPython/Actor:JohnCleese')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop/Character:Mousebender')`\n *\n */\nclass Key {\n  constructor (s, clean) {\n    if (typeof s === 'string') {\n      this._buf = utf8Encoder.encode(s)\n    } else if (s instanceof Uint8Array) {\n      this._buf = s\n    } else {\n      throw new Error('Invalid key, should be String of Uint8Array')\n    }\n\n    if (clean == null) {\n      clean = true\n    }\n\n    if (clean) {\n      this.clean()\n    }\n\n    if (this._buf.byteLength === 0 || this._buf[0] !== pathSep) {\n      throw new Error('Invalid key')\n    }\n  }\n\n  /**\n   * Convert to the string representation\n   *\n   * @param {string} [encoding='utf8']\n   * @returns {string}\n   */\n  toString (encoding = 'utf8') {\n    if (encoding === 'utf8' || encoding === 'utf-8') {\n      return utf8Decoder.decode(this._buf)\n    }\n\n    return new TextDecoder(encoding).decode(this._buf)\n  }\n\n  /**\n   * Return the Uint8Array representation of the key\n   *\n   * @returns {Uint8Array}\n   */\n  uint8Array () {\n    return this._buf\n  }\n\n  /**\n   * @returns {String}\n   */\n  get [Symbol.toStringTag] () {\n    return `Key(${this.toString()})`\n  }\n\n  /**\n   * Constructs a key out of a namespace array.\n   *\n   * @param {Array<string>} list\n   * @returns {Key}\n   *\n   * @example\n   * Key.withNamespaces(['one', 'two'])\n   * // => Key('/one/two')\n   *\n   */\n  static withNamespaces (list) {\n    return new _Key(list.join(pathSepS))\n  }\n\n  /**\n   * Returns a randomly (uuid) generated key.\n   *\n   * @returns {Key}\n   *\n   * @example\n   * Key.random()\n   * // => Key('/f98719ea086343f7b71f32ea9d9d521d')\n   *\n   */\n  static random () {\n    return new _Key(nanoid().replace(/-/g, ''))\n  }\n\n  /**\n   * Cleanup the current key\n   *\n   * @returns {void}\n   */\n  clean () {\n    if (!this._buf || this._buf.byteLength === 0) {\n      this._buf = pathSepB\n    }\n\n    if (this._buf[0] !== pathSep) {\n      const bytes = new Uint8Array(this._buf.byteLength + 1)\n      bytes.fill(pathSep, 0, 1)\n      bytes.set(this._buf, 1)\n      this._buf = bytes\n    }\n\n    // normalize does not remove trailing slashes\n    while (this._buf.byteLength > 1 && this._buf[this._buf.byteLength - 1] === pathSep) {\n      this._buf = this._buf.subarray(0, -1)\n    }\n  }\n\n  /**\n   * Check if the given key is sorted lower than ourself.\n   *\n   * @param {Key} key\n   * @returns {bool}\n   */\n  less (key) {\n    const list1 = this.list()\n    const list2 = key.list()\n\n    for (let i = 0; i < list1.length; i++) {\n      if (list2.length < i + 1) {\n        return false\n      }\n\n      const c1 = list1[i]\n      const c2 = list2[i]\n\n      if (c1 < c2) {\n        return true\n      } else if (c1 > c2) {\n        return false\n      }\n    }\n\n    return list1.length < list2.length\n  }\n\n  /**\n   * Returns the key with all parts in reversed order.\n   *\n   * @returns {Key}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').reverse()\n   * // => Key('/Actor:JohnCleese/MontyPython/Comedy')\n   */\n  reverse () {\n    return Key.withNamespaces(this.list().slice().reverse())\n  }\n\n  /**\n   * Returns the `namespaces` making up this Key.\n   *\n   * @returns {Array<string>}\n   */\n  namespaces () {\n    return this.list()\n  }\n\n  /** Returns the \"base\" namespace of this key.\n   *\n   * @returns {string}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').baseNamespace()\n   * // => 'Actor:JohnCleese'\n   *\n   */\n  baseNamespace () {\n    const ns = this.namespaces()\n    return ns[ns.length - 1]\n  }\n\n  /**\n   * Returns the `list` representation of this key.\n   *\n   * @returns {Array<string>}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').list()\n   * // => ['Comedy', 'MontyPythong', 'Actor:JohnCleese']\n   *\n   */\n  list () {\n    return this.toString().split(pathSepS).slice(1)\n  }\n\n  /**\n   * Returns the \"type\" of this key (value of last namespace).\n   *\n   * @returns {string}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').type()\n   * // => 'Actor'\n   *\n   */\n  type () {\n    return namespaceType(this.baseNamespace())\n  }\n\n  /**\n   * Returns the \"name\" of this key (field of last namespace).\n   *\n   * @returns {string}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').name()\n   * // => 'JohnCleese'\n   */\n  name () {\n    return namespaceValue(this.baseNamespace())\n  }\n\n  /**\n   * Returns an \"instance\" of this type key (appends value to namespace).\n   *\n   * @param {string} s\n   * @returns {Key}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython/Actor').instance('JohnClesse')\n   * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n   */\n  instance (s) {\n    return new _Key(this.toString() + ':' + s)\n  }\n\n  /**\n   * Returns the \"path\" of this key (parent + type).\n   *\n   * @returns {Key}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').path()\n   * // => Key('/Comedy/MontyPython/Actor')\n   *\n   */\n  path () {\n    let p = this.parent().toString()\n    if (!p.endsWith(pathSepS)) {\n      p += pathSepS\n    }\n    p += this.type()\n    return new _Key(p)\n  }\n\n  /**\n   * Returns the `parent` Key of this Key.\n   *\n   * @returns {Key}\n   *\n   * @example\n   * new Key(\"/Comedy/MontyPython/Actor:JohnCleese\").parent()\n   * // => Key(\"/Comedy/MontyPython\")\n   *\n   */\n  parent () {\n    const list = this.list()\n    if (list.length === 1) {\n      return new _Key(pathSepS)\n    }\n\n    return new _Key(list.slice(0, -1).join(pathSepS))\n  }\n\n  /**\n   * Returns the `child` Key of this Key.\n   *\n   * @param {Key} key\n   * @returns {Key}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython').child(new Key('Actor:JohnCleese'))\n   * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n   *\n   */\n  child (key) {\n    if (this.toString() === pathSepS) {\n      return key\n    } else if (key.toString() === pathSepS) {\n      return this\n    }\n\n    return new _Key(this.toString() + key.toString(), false)\n  }\n\n  /**\n   * Returns whether this key is a prefix of `other`\n   *\n   * @param {Key} other\n   * @returns {bool}\n   *\n   * @example\n   * new Key('/Comedy').isAncestorOf('/Comedy/MontyPython')\n   * // => true\n   *\n   */\n  isAncestorOf (other) {\n    if (other.toString() === this.toString()) {\n      return false\n    }\n\n    return other.toString().startsWith(this.toString())\n  }\n\n  /**\n   * Returns whether this key is a contains another as prefix.\n   *\n   * @param {Key} other\n   * @returns {bool}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython').isDecendantOf('/Comedy')\n   * // => true\n   *\n   */\n  isDecendantOf (other) {\n    if (other.toString() === this.toString()) {\n      return false\n    }\n\n    return this.toString().startsWith(other.toString())\n  }\n\n  /**\n   * Returns wether this key has only one namespace.\n   *\n   * @returns {bool}\n   *\n   */\n  isTopLevel () {\n    return this.list().length === 1\n  }\n\n  /**\n   * Concats one or more Keys into one new Key.\n   *\n   * @param {Array<Key>} keys\n   * @returns {Key}\n   */\n  concat (...keys) {\n    return Key.withNamespaces([...this.namespaces(), ...flatten(keys.map(key => key.namespaces()))])\n  }\n}\n\n/**\n * The first component of a namespace. `foo` in `foo:bar`\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceType (ns) {\n  const parts = ns.split(':')\n  if (parts.length < 2) {\n    return ''\n  }\n  return parts.slice(0, -1).join(':')\n}\n\n/**\n * The last component of a namespace, `baz` in `foo:bar:baz`.\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceValue (ns) {\n  const parts = ns.split(':')\n  return parts[parts.length - 1]\n}\n\n/**\n * Flatten array of arrays (only one level)\n * @param {Array<Array>} arr\n * @return {*}\n */\nfunction flatten (arr) {\n  return [].concat(...arr)\n}\n\nconst _Key = withIs(Key, { className: 'Key', symbolName: '@ipfs/interface-datastore/key' })\n\nmodule.exports = _Key\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/interface-datastore/src/key.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/interface-datastore/src/key.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}}],"sources":{"node_modules/interface-datastore/src/key.js":"'use strict'\n\nconst { nanoid } = require('nanoid')\nconst withIs = require('class-is')\nconst { utf8Encoder, utf8Decoder } = require('./utils')\nconst TextDecoder = require('ipfs-utils/src/text-decoder')\n\nconst pathSepS = '/'\nconst pathSepB = utf8Encoder.encode(pathSepS)\nconst pathSep = pathSepB[0]\n\n/**\n * A Key represents the unique identifier of an object.\n * Our Key scheme is inspired by file systems and Google App Engine key model.\n * Keys are meant to be unique across a system. Keys are hierarchical,\n * incorporating more and more specific namespaces. Thus keys can be deemed\n * 'children' or 'ancestors' of other keys:\n * - `new Key('/Comedy')`\n * - `new Key('/Comedy/MontyPython')`\n * Also, every namespace can be parametrized to embed relevant object\n * information. For example, the Key `name` (most specific namespace) could\n * include the object type:\n * - `new Key('/Comedy/MontyPython/Actor:JohnCleese')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop/Character:Mousebender')`\n *\n */\nclass Key {\n  constructor (s, clean) {\n    if (typeof s === 'string') {\n      this._buf = utf8Encoder.encode(s)\n    } else if (s instanceof Uint8Array) {\n      this._buf = s\n    } else {\n      throw new Error('Invalid key, should be String of Uint8Array')\n    }\n\n    if (clean == null) {\n      clean = true\n    }\n\n    if (clean) {\n      this.clean()\n    }\n\n    if (this._buf.byteLength === 0 || this._buf[0] !== pathSep) {\n      throw new Error('Invalid key')\n    }\n  }\n\n  /**\n   * Convert to the string representation\n   *\n   * @param {string} [encoding='utf8']\n   * @returns {string}\n   */\n  toString (encoding = 'utf8') {\n    if (encoding === 'utf8' || encoding === 'utf-8') {\n      return utf8Decoder.decode(this._buf)\n    }\n\n    return new TextDecoder(encoding).decode(this._buf)\n  }\n\n  /**\n   * Return the Uint8Array representation of the key\n   *\n   * @returns {Uint8Array}\n   */\n  uint8Array () {\n    return this._buf\n  }\n\n  /**\n   * @returns {String}\n   */\n  get [Symbol.toStringTag] () {\n    return `Key(${this.toString()})`\n  }\n\n  /**\n   * Constructs a key out of a namespace array.\n   *\n   * @param {Array<string>} list\n   * @returns {Key}\n   *\n   * @example\n   * Key.withNamespaces(['one', 'two'])\n   * // => Key('/one/two')\n   *\n   */\n  static withNamespaces (list) {\n    return new _Key(list.join(pathSepS))\n  }\n\n  /**\n   * Returns a randomly (uuid) generated key.\n   *\n   * @returns {Key}\n   *\n   * @example\n   * Key.random()\n   * // => Key('/f98719ea086343f7b71f32ea9d9d521d')\n   *\n   */\n  static random () {\n    return new _Key(nanoid().replace(/-/g, ''))\n  }\n\n  /**\n   * Cleanup the current key\n   *\n   * @returns {void}\n   */\n  clean () {\n    if (!this._buf || this._buf.byteLength === 0) {\n      this._buf = pathSepB\n    }\n\n    if (this._buf[0] !== pathSep) {\n      const bytes = new Uint8Array(this._buf.byteLength + 1)\n      bytes.fill(pathSep, 0, 1)\n      bytes.set(this._buf, 1)\n      this._buf = bytes\n    }\n\n    // normalize does not remove trailing slashes\n    while (this._buf.byteLength > 1 && this._buf[this._buf.byteLength - 1] === pathSep) {\n      this._buf = this._buf.subarray(0, -1)\n    }\n  }\n\n  /**\n   * Check if the given key is sorted lower than ourself.\n   *\n   * @param {Key} key\n   * @returns {bool}\n   */\n  less (key) {\n    const list1 = this.list()\n    const list2 = key.list()\n\n    for (let i = 0; i < list1.length; i++) {\n      if (list2.length < i + 1) {\n        return false\n      }\n\n      const c1 = list1[i]\n      const c2 = list2[i]\n\n      if (c1 < c2) {\n        return true\n      } else if (c1 > c2) {\n        return false\n      }\n    }\n\n    return list1.length < list2.length\n  }\n\n  /**\n   * Returns the key with all parts in reversed order.\n   *\n   * @returns {Key}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').reverse()\n   * // => Key('/Actor:JohnCleese/MontyPython/Comedy')\n   */\n  reverse () {\n    return Key.withNamespaces(this.list().slice().reverse())\n  }\n\n  /**\n   * Returns the `namespaces` making up this Key.\n   *\n   * @returns {Array<string>}\n   */\n  namespaces () {\n    return this.list()\n  }\n\n  /** Returns the \"base\" namespace of this key.\n   *\n   * @returns {string}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').baseNamespace()\n   * // => 'Actor:JohnCleese'\n   *\n   */\n  baseNamespace () {\n    const ns = this.namespaces()\n    return ns[ns.length - 1]\n  }\n\n  /**\n   * Returns the `list` representation of this key.\n   *\n   * @returns {Array<string>}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').list()\n   * // => ['Comedy', 'MontyPythong', 'Actor:JohnCleese']\n   *\n   */\n  list () {\n    return this.toString().split(pathSepS).slice(1)\n  }\n\n  /**\n   * Returns the \"type\" of this key (value of last namespace).\n   *\n   * @returns {string}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').type()\n   * // => 'Actor'\n   *\n   */\n  type () {\n    return namespaceType(this.baseNamespace())\n  }\n\n  /**\n   * Returns the \"name\" of this key (field of last namespace).\n   *\n   * @returns {string}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').name()\n   * // => 'JohnCleese'\n   */\n  name () {\n    return namespaceValue(this.baseNamespace())\n  }\n\n  /**\n   * Returns an \"instance\" of this type key (appends value to namespace).\n   *\n   * @param {string} s\n   * @returns {Key}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython/Actor').instance('JohnClesse')\n   * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n   */\n  instance (s) {\n    return new _Key(this.toString() + ':' + s)\n  }\n\n  /**\n   * Returns the \"path\" of this key (parent + type).\n   *\n   * @returns {Key}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').path()\n   * // => Key('/Comedy/MontyPython/Actor')\n   *\n   */\n  path () {\n    let p = this.parent().toString()\n    if (!p.endsWith(pathSepS)) {\n      p += pathSepS\n    }\n    p += this.type()\n    return new _Key(p)\n  }\n\n  /**\n   * Returns the `parent` Key of this Key.\n   *\n   * @returns {Key}\n   *\n   * @example\n   * new Key(\"/Comedy/MontyPython/Actor:JohnCleese\").parent()\n   * // => Key(\"/Comedy/MontyPython\")\n   *\n   */\n  parent () {\n    const list = this.list()\n    if (list.length === 1) {\n      return new _Key(pathSepS)\n    }\n\n    return new _Key(list.slice(0, -1).join(pathSepS))\n  }\n\n  /**\n   * Returns the `child` Key of this Key.\n   *\n   * @param {Key} key\n   * @returns {Key}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython').child(new Key('Actor:JohnCleese'))\n   * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n   *\n   */\n  child (key) {\n    if (this.toString() === pathSepS) {\n      return key\n    } else if (key.toString() === pathSepS) {\n      return this\n    }\n\n    return new _Key(this.toString() + key.toString(), false)\n  }\n\n  /**\n   * Returns whether this key is a prefix of `other`\n   *\n   * @param {Key} other\n   * @returns {bool}\n   *\n   * @example\n   * new Key('/Comedy').isAncestorOf('/Comedy/MontyPython')\n   * // => true\n   *\n   */\n  isAncestorOf (other) {\n    if (other.toString() === this.toString()) {\n      return false\n    }\n\n    return other.toString().startsWith(this.toString())\n  }\n\n  /**\n   * Returns whether this key is a contains another as prefix.\n   *\n   * @param {Key} other\n   * @returns {bool}\n   *\n   * @example\n   * new Key('/Comedy/MontyPython').isDecendantOf('/Comedy')\n   * // => true\n   *\n   */\n  isDecendantOf (other) {\n    if (other.toString() === this.toString()) {\n      return false\n    }\n\n    return this.toString().startsWith(other.toString())\n  }\n\n  /**\n   * Returns wether this key has only one namespace.\n   *\n   * @returns {bool}\n   *\n   */\n  isTopLevel () {\n    return this.list().length === 1\n  }\n\n  /**\n   * Concats one or more Keys into one new Key.\n   *\n   * @param {Array<Key>} keys\n   * @returns {Key}\n   */\n  concat (...keys) {\n    return Key.withNamespaces([...this.namespaces(), ...flatten(keys.map(key => key.namespaces()))])\n  }\n}\n\n/**\n * The first component of a namespace. `foo` in `foo:bar`\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceType (ns) {\n  const parts = ns.split(':')\n  if (parts.length < 2) {\n    return ''\n  }\n  return parts.slice(0, -1).join(':')\n}\n\n/**\n * The last component of a namespace, `baz` in `foo:bar:baz`.\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceValue (ns) {\n  const parts = ns.split(':')\n  return parts[parts.length - 1]\n}\n\n/**\n * Flatten array of arrays (only one level)\n * @param {Array<Array>} arr\n * @return {*}\n */\nfunction flatten (arr) {\n  return [].concat(...arr)\n}\n\nconst _Key = withIs(Key, { className: 'Key', symbolName: '@ipfs/interface-datastore/key' })\n\nmodule.exports = _Key\n"},"lineCount":407}},"error":null,"hash":"7a209227e2523e541346cb7b35a82143","cacheData":{"env":{}}}