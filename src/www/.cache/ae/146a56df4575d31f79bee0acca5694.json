{"id":"node_modules/it-ws/source.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/it-ws/package.json","includedInParent":true,"mtime":1604854741185},{"name":"buffer","loc":{"line":1,"column":27},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/it-ws/source.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/node-libs-browser/node_modules/buffer/index.js"},{"name":"event-iterator","loc":{"line":2,"column":34},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/it-ws/source.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/event-iterator/lib/dom.js"}],"generated":{"js":"\nconst { Buffer } = require('buffer')\nconst { EventIterator } = require('event-iterator')\n\n// copied from github.com/feross/buffer\n// Some ArrayBuffers are not passing the instanceof check, so we need to do a bit more work :(\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\nmodule.exports = socket => {\n  const removeListener = socket.removeEventListener || socket.removeListener\n\n  const source = (async function * () {\n    const messages = new EventIterator(\n      ({ push, stop, fail }) => {\n        socket.addEventListener('message', push)\n        socket.addEventListener('error', fail)\n        socket.addEventListener('close', stop)\n\n        return () => {\n          removeListener.call(socket, 'message', push)\n          removeListener.call(socket, 'error', fail)\n          removeListener.call(socket, 'close', stop)\n        }\n      },\n      { highWaterMark: Infinity }\n    )\n\n    for await (const { data } of messages) {\n      yield isArrayBuffer(data) ? Buffer.from(data) : data\n    }\n  })()\n\n  let connected = socket.readyState === 1\n  let connError\n\n  socket.addEventListener('open', () => {\n    connected = true\n    connError = null\n  })\n\n  socket.addEventListener('close', () => {\n    connected = false\n    connError = null\n  })\n\n  socket.addEventListener('error', err => {\n    if (!connected) connError = err\n  })\n\n  source.connected = () => new Promise((resolve, reject) => {\n    if (connected) return resolve()\n    if (connError) return reject(connError)\n\n    const cleanUp = cont => {\n      removeListener.call(socket, 'open', onOpen)\n      removeListener.call(socket, 'error', onError)\n      cont()\n    }\n\n    const onOpen = () => cleanUp(resolve)\n    const onError = err => cleanUp(() => reject(err))\n\n    socket.addEventListener('open', onOpen)\n    socket.addEventListener('error', onError)\n  })\n\n  return source\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/it-ws/source.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/it-ws/source.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}}],"sources":{"node_modules/it-ws/source.js":"const { Buffer } = require('buffer')\nconst { EventIterator } = require('event-iterator')\n\n// copied from github.com/feross/buffer\n// Some ArrayBuffers are not passing the instanceof check, so we need to do a bit more work :(\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\nmodule.exports = socket => {\n  const removeListener = socket.removeEventListener || socket.removeListener\n\n  const source = (async function * () {\n    const messages = new EventIterator(\n      ({ push, stop, fail }) => {\n        socket.addEventListener('message', push)\n        socket.addEventListener('error', fail)\n        socket.addEventListener('close', stop)\n\n        return () => {\n          removeListener.call(socket, 'message', push)\n          removeListener.call(socket, 'error', fail)\n          removeListener.call(socket, 'close', stop)\n        }\n      },\n      { highWaterMark: Infinity }\n    )\n\n    for await (const { data } of messages) {\n      yield isArrayBuffer(data) ? Buffer.from(data) : data\n    }\n  })()\n\n  let connected = socket.readyState === 1\n  let connError\n\n  socket.addEventListener('open', () => {\n    connected = true\n    connError = null\n  })\n\n  socket.addEventListener('close', () => {\n    connected = false\n    connError = null\n  })\n\n  socket.addEventListener('error', err => {\n    if (!connected) connError = err\n  })\n\n  source.connected = () => new Promise((resolve, reject) => {\n    if (connected) return resolve()\n    if (connError) return reject(connError)\n\n    const cleanUp = cont => {\n      removeListener.call(socket, 'open', onOpen)\n      removeListener.call(socket, 'error', onError)\n      cont()\n    }\n\n    const onOpen = () => cleanUp(resolve)\n    const onError = err => cleanUp(() => reject(err))\n\n    socket.addEventListener('open', onOpen)\n    socket.addEventListener('error', onError)\n  })\n\n  return source\n}\n"},"lineCount":73}},"error":null,"hash":"11f595261bb98cab417046e1e24004a2","cacheData":{"env":{}}}