{"id":"node_modules/it-protocol-buffers/it.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/it-protocol-buffers/package.json","includedInParent":true,"mtime":1604854663745}],"generated":{"js":"'use strict'\n\nmodule.exports.encode = (proto) => {\n  return source => (async function * () {\n    for await (const msg of source) {\n      yield proto.encode(msg)\n    }\n  })()\n}\n\nmodule.exports.decode = (proto) => {\n  return source => (async function * () {\n    for await (const msg of source) {\n      yield proto.decode(msg)\n    }\n  })()\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/it-protocol-buffers/it.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}}],"sources":{"node_modules/it-protocol-buffers/it.js":"'use strict'\n\nmodule.exports.encode = (proto) => {\n  return source => (async function * () {\n    for await (const msg of source) {\n      yield proto.encode(msg)\n    }\n  })()\n}\n\nmodule.exports.decode = (proto) => {\n  return source => (async function * () {\n    for await (const msg of source) {\n      yield proto.decode(msg)\n    }\n  })()\n}\n"},"lineCount":18}},"error":null,"hash":"349307bb7c97ae84f01b2e898de91523","cacheData":{"env":{}}}