{"id":"node_modules/truncate-utf8-bytes/lib/truncate.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/truncate-utf8-bytes/package.json","includedInParent":true,"mtime":1604854663745}],"generated":{"js":"'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\n\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function truncate(getLength, string, byteLength) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n\n  var charLength = string.length;\n  var curByteLength = 0;\n  var codePoint;\n  var segment;\n\n  for (var i = 0; i < charLength; i += 1) {\n    codePoint = string.charCodeAt(i);\n    segment = string[i];\n\n    if (isHighSurrogate(codePoint) && isLowSurrogate(string.charCodeAt(i + 1))) {\n      i += 1;\n      segment += string[i];\n    }\n\n    curByteLength += getLength(segment);\n\n    if (curByteLength === byteLength) {\n      return string.slice(0, i + 1);\n    }\n    else if (curByteLength > byteLength) {\n      return string.slice(0, i - segment.length + 1);\n    }\n  }\n\n  return string;\n};\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/truncate-utf8-bytes/lib/truncate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}}],"sources":{"node_modules/truncate-utf8-bytes/lib/truncate.js":"'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\n\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function truncate(getLength, string, byteLength) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n\n  var charLength = string.length;\n  var curByteLength = 0;\n  var codePoint;\n  var segment;\n\n  for (var i = 0; i < charLength; i += 1) {\n    codePoint = string.charCodeAt(i);\n    segment = string[i];\n\n    if (isHighSurrogate(codePoint) && isLowSurrogate(string.charCodeAt(i + 1))) {\n      i += 1;\n      segment += string[i];\n    }\n\n    curByteLength += getLength(segment);\n\n    if (curByteLength === byteLength) {\n      return string.slice(0, i + 1);\n    }\n    else if (curByteLength > byteLength) {\n      return string.slice(0, i - segment.length + 1);\n    }\n  }\n\n  return string;\n};\n\n"},"lineCount":44}},"error":null,"hash":"208df1d99b99ecc2829927b68d36e56e","cacheData":{"env":{}}}