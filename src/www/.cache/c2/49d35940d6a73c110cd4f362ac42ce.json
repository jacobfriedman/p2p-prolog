{"id":"node_modules/stream-to-it/source.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/stream-to-it/package.json","includedInParent":true,"mtime":1604854663817}],"generated":{"js":"module.exports = readable => {\n  // Node.js stream\n  if (readable[Symbol.asyncIterator]) return readable\n\n  // Browser ReadableStream\n  if (readable.getReader) {\n    return (async function * () {\n      const reader = readable.getReader()\n\n      try {\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) return\n          yield value\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  throw new Error('unknown stream')\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/stream-to-it/source.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/stream-to-it/source.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"node_modules/stream-to-it/source.js":"module.exports = readable => {\n  // Node.js stream\n  if (readable[Symbol.asyncIterator]) return readable\n\n  // Browser ReadableStream\n  if (readable.getReader) {\n    return (async function * () {\n      const reader = readable.getReader()\n\n      try {\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) return\n          yield value\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  throw new Error('unknown stream')\n}\n"},"lineCount":24}},"error":null,"hash":"e369f635f1ed33e27ffa51b058d44505","cacheData":{"env":{}}}