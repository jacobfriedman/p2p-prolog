{"id":"node_modules/multiaddr/src/protocols-table.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/package.json","includedInParent":true,"mtime":1604854663745}],"generated":{"js":"'use strict'\n\nfunction Protocols (proto) {\n  if (typeof (proto) === 'number') {\n    if (Protocols.codes[proto]) {\n      return Protocols.codes[proto]\n    }\n\n    throw new Error('no protocol with code: ' + proto)\n  } else if (typeof (proto) === 'string' || proto instanceof String) {\n    if (Protocols.names[proto]) {\n      return Protocols.names[proto]\n    }\n\n    throw new Error('no protocol with name: ' + proto)\n  }\n\n  throw new Error('invalid protocol id type: ' + proto)\n}\n\nconst V = -1\nProtocols.lengthPrefixedVarSize = V\nProtocols.V = V\n\nProtocols.table = [\n  [4, 32, 'ip4'],\n  [6, 16, 'tcp'],\n  [33, 16, 'dccp'],\n  [41, 128, 'ip6'],\n  [42, V, 'ip6zone'],\n  [53, V, 'dns', 'resolvable'],\n  [54, V, 'dns4', 'resolvable'],\n  [55, V, 'dns6', 'resolvable'],\n  [56, V, 'dnsaddr', 'resolvable'],\n  [132, 16, 'sctp'],\n  [273, 16, 'udp'],\n  [275, 0, 'p2p-webrtc-star'],\n  [276, 0, 'p2p-webrtc-direct'],\n  [277, 0, 'p2p-stardust'],\n  [290, 0, 'p2p-circuit'],\n  [301, 0, 'udt'],\n  [302, 0, 'utp'],\n  [400, V, 'unix', false, 'path'],\n  // `ipfs` is added before `p2p` for legacy support.\n  // All text representations will default to `p2p`, but `ipfs` will\n  // still be supported\n  [421, V, 'ipfs'],\n  // `p2p` is the preferred name for 421, and is now the default\n  [421, V, 'p2p'],\n  [443, 0, 'https'],\n  [444, 96, 'onion'],\n  [445, 296, 'onion3'],\n  [446, V, 'garlic64'],\n  [460, 0, 'quic'],\n  [477, 0, 'ws'],\n  [478, 0, 'wss'],\n  [479, 0, 'p2p-websocket-star'],\n  [480, 0, 'http'],\n  [777, V, 'memory']\n]\n\nProtocols.names = {}\nProtocols.codes = {}\n\n// populate tables\nProtocols.table.map(row => {\n  const proto = p.apply(null, row)\n  Protocols.codes[proto.code] = proto\n  Protocols.names[proto.name] = proto\n})\n\nProtocols.object = p\n\nfunction p (code, size, name, resolvable, path) {\n  return {\n    code,\n    size,\n    name,\n    resolvable: Boolean(resolvable),\n    path: Boolean(path)\n  }\n}\n\nmodule.exports = Protocols\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/multiaddr/src/protocols-table.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}}],"sources":{"node_modules/multiaddr/src/protocols-table.js":"'use strict'\n\nfunction Protocols (proto) {\n  if (typeof (proto) === 'number') {\n    if (Protocols.codes[proto]) {\n      return Protocols.codes[proto]\n    }\n\n    throw new Error('no protocol with code: ' + proto)\n  } else if (typeof (proto) === 'string' || proto instanceof String) {\n    if (Protocols.names[proto]) {\n      return Protocols.names[proto]\n    }\n\n    throw new Error('no protocol with name: ' + proto)\n  }\n\n  throw new Error('invalid protocol id type: ' + proto)\n}\n\nconst V = -1\nProtocols.lengthPrefixedVarSize = V\nProtocols.V = V\n\nProtocols.table = [\n  [4, 32, 'ip4'],\n  [6, 16, 'tcp'],\n  [33, 16, 'dccp'],\n  [41, 128, 'ip6'],\n  [42, V, 'ip6zone'],\n  [53, V, 'dns', 'resolvable'],\n  [54, V, 'dns4', 'resolvable'],\n  [55, V, 'dns6', 'resolvable'],\n  [56, V, 'dnsaddr', 'resolvable'],\n  [132, 16, 'sctp'],\n  [273, 16, 'udp'],\n  [275, 0, 'p2p-webrtc-star'],\n  [276, 0, 'p2p-webrtc-direct'],\n  [277, 0, 'p2p-stardust'],\n  [290, 0, 'p2p-circuit'],\n  [301, 0, 'udt'],\n  [302, 0, 'utp'],\n  [400, V, 'unix', false, 'path'],\n  // `ipfs` is added before `p2p` for legacy support.\n  // All text representations will default to `p2p`, but `ipfs` will\n  // still be supported\n  [421, V, 'ipfs'],\n  // `p2p` is the preferred name for 421, and is now the default\n  [421, V, 'p2p'],\n  [443, 0, 'https'],\n  [444, 96, 'onion'],\n  [445, 296, 'onion3'],\n  [446, V, 'garlic64'],\n  [460, 0, 'quic'],\n  [477, 0, 'ws'],\n  [478, 0, 'wss'],\n  [479, 0, 'p2p-websocket-star'],\n  [480, 0, 'http'],\n  [777, V, 'memory']\n]\n\nProtocols.names = {}\nProtocols.codes = {}\n\n// populate tables\nProtocols.table.map(row => {\n  const proto = p.apply(null, row)\n  Protocols.codes[proto.code] = proto\n  Protocols.names[proto.name] = proto\n})\n\nProtocols.object = p\n\nfunction p (code, size, name, resolvable, path) {\n  return {\n    code,\n    size,\n    name,\n    resolvable: Boolean(resolvable),\n    path: Boolean(path)\n  }\n}\n\nmodule.exports = Protocols\n"},"lineCount":85}},"error":null,"hash":"6b8d084dcf9b41594312f3231fe94788","cacheData":{"env":{}}}