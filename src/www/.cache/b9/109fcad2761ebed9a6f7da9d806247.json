{"id":"node_modules/protons/src/compile/encodings/int64.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protons/package.json","includedInParent":true,"mtime":1604854663745},{"name":"varint","loc":{"line":3,"column":23},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protons/src/compile/encodings/int64.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/varint/index.js"},{"name":"./encoder","loc":{"line":4,"column":24},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protons/src/compile/encodings/int64.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protons/src/compile/encodings/encoder.js"}],"generated":{"js":"'use strict'\n\nconst varint = require('varint')\nconst encoder = require('./encoder')\n\nfunction int64Encode (val, buffer, dataView, offset) {\n  if (val < 0) {\n    const last = offset + 9\n    varint.encode(val * -1, buffer, offset)\n\n    offset += varint.encode.bytes - 1\n    buffer[offset] = buffer[offset] | 0x80\n\n    while (offset < last - 1) {\n      offset++\n      buffer[offset] = 0xff\n    }\n    buffer[last] = 0x01\n\n    int64Encode.bytes = 10\n  } else {\n    varint.encode(val, buffer, offset)\n    int64Encode.bytes = varint.encode.bytes\n  }\n}\n\nfunction int64Decode (buffer, dataView, offset) {\n  let val = varint.decode(buffer, offset)\n\n  if (val >= Math.pow(2, 63)) {\n    let limit = 9\n    while (buffer[offset + limit - 1] === 0xff) limit--\n    limit = limit || 9\n    const subset = buffer.subarray(offset, offset + limit)\n    subset[limit - 1] = subset[limit - 1] & 0x7f\n    val = -1 * varint.decode(subset, 0)\n    int64Decode.bytes = 10\n  } else {\n    int64Decode.bytes = varint.decode.bytes\n  }\n\n  return val\n}\n\nfunction int64EncodingLength (val) {\n  return val < 0 ? 10 : varint.encodingLength(val)\n}\n\nmodule.exports = encoder(0, int64Encode, int64Decode, int64EncodingLength)\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int64.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}}],"sources":{"node_modules/protons/src/compile/encodings/int64.js":"'use strict'\n\nconst varint = require('varint')\nconst encoder = require('./encoder')\n\nfunction int64Encode (val, buffer, dataView, offset) {\n  if (val < 0) {\n    const last = offset + 9\n    varint.encode(val * -1, buffer, offset)\n\n    offset += varint.encode.bytes - 1\n    buffer[offset] = buffer[offset] | 0x80\n\n    while (offset < last - 1) {\n      offset++\n      buffer[offset] = 0xff\n    }\n    buffer[last] = 0x01\n\n    int64Encode.bytes = 10\n  } else {\n    varint.encode(val, buffer, offset)\n    int64Encode.bytes = varint.encode.bytes\n  }\n}\n\nfunction int64Decode (buffer, dataView, offset) {\n  let val = varint.decode(buffer, offset)\n\n  if (val >= Math.pow(2, 63)) {\n    let limit = 9\n    while (buffer[offset + limit - 1] === 0xff) limit--\n    limit = limit || 9\n    const subset = buffer.subarray(offset, offset + limit)\n    subset[limit - 1] = subset[limit - 1] & 0x7f\n    val = -1 * varint.decode(subset, 0)\n    int64Decode.bytes = 10\n  } else {\n    int64Decode.bytes = varint.decode.bytes\n  }\n\n  return val\n}\n\nfunction int64EncodingLength (val) {\n  return val < 0 ? 10 : varint.encodingLength(val)\n}\n\nmodule.exports = encoder(0, int64Encode, int64Decode, int64EncodingLength)\n"},"lineCount":50}},"error":null,"hash":"24e6af46c426c46c937675df0d015280","cacheData":{"env":{}}}