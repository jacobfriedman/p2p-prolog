{"id":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-crypto/package.json","includedInParent":true,"mtime":1604854663745},{"name":"./ecdh","loc":{"line":3,"column":21},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/libp2p-crypto/src/keys/ecdh-browser.js"}],"generated":{"js":"'use strict';\n\nconst ecdh = require('./ecdh'); // Generates an ephemeral public key and returns a function that will compute\n// the shared secret key.\n//\n// Focuses only on ECDH now, but can be made more general in the future.\n\n\nmodule.exports = async curve => ecdh.generateEphmeralKeyPair(curve); // eslint-disable-line require-await"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":0}},{"name":"ecdh","generated":{"line":3,"column":6},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":6}},{"generated":{"line":3,"column":10},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":10}},{"name":"require","generated":{"line":3,"column":13},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":13}},{"generated":{"line":3,"column":20},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":20}},{"generated":{"line":3,"column":21},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":21}},{"generated":{"line":3,"column":29},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":20}},{"generated":{"line":3,"column":30},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":32},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":5,"column":0}},{"generated":{"line":4,"column":0},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":6,"column":0}},{"generated":{"line":5,"column":0},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":7,"column":0}},{"generated":{"line":6,"column":0},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":8,"column":0}},{"name":"module","generated":{"line":9,"column":0},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":0}},{"generated":{"line":9,"column":6},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":6}},{"name":"exports","generated":{"line":9,"column":7},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":7}},{"generated":{"line":9,"column":14},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":0}},{"generated":{"line":9,"column":17},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":17}},{"name":"curve","generated":{"line":9,"column":23},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":24}},{"generated":{"line":9,"column":28},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":17}},{"name":"ecdh","generated":{"line":9,"column":32},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":34}},{"generated":{"line":9,"column":36},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":38}},{"name":"generateEphmeralKeyPair","generated":{"line":9,"column":37},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":39}},{"generated":{"line":9,"column":60},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":34}},{"name":"curve","generated":{"line":9,"column":61},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":63}},{"generated":{"line":9,"column":66},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":34}},{"generated":{"line":9,"column":67},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":0}},{"generated":{"line":9,"column":69},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":70}}],"sources":{"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js":"'use strict'\n\nconst ecdh = require('./ecdh')\n\n// Generates an ephemeral public key and returns a function that will compute\n// the shared secret key.\n//\n// Focuses only on ECDH now, but can be made more general in the future.\nmodule.exports = async (curve) => ecdh.generateEphmeralKeyPair(curve) // eslint-disable-line require-await\n"},"lineCount":null}},"error":null,"hash":"e0071ea375fc282cb0cdfb7a438d80df","cacheData":{"env":{}}}