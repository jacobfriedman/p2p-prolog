{"id":"node_modules/sanitize-filename/index.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/sanitize-filename/package.json","includedInParent":true,"mtime":1604854663745},{"name":"truncate-utf8-bytes","loc":{"line":31,"column":23},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/sanitize-filename/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/truncate-utf8-bytes/browser.js"}],"generated":{"js":"/*jshint node:true*/\n'use strict';\n\n/**\n * Replaces characters in strings that are illegal/unsafe for filenames.\n * Unsafe characters are either removed or replaced by a substitute set\n * in the optional `options` object.\n *\n * Illegal Characters on Various Operating Systems\n * / ? < > \\ : * | \"\n * https://kb.acronis.com/content/39790\n *\n * Unicode Control codes\n * C0 0x00-0x1f & C1 (0x80-0x9f)\n * http://en.wikipedia.org/wiki/C0_and_C1_control_codes\n *\n * Reserved filenames on Unix-based systems (\".\", \"..\")\n * Reserved filenames in Windows (\"CON\", \"PRN\", \"AUX\", \"NUL\", \"COM1\",\n * \"COM2\", \"COM3\", \"COM4\", \"COM5\", \"COM6\", \"COM7\", \"COM8\", \"COM9\",\n * \"LPT1\", \"LPT2\", \"LPT3\", \"LPT4\", \"LPT5\", \"LPT6\", \"LPT7\", \"LPT8\", and\n * \"LPT9\") case-insesitively and with or without filename extensions.\n *\n * Capped at 255 characters in length.\n * http://unix.stackexchange.com/questions/32795/what-is-the-maximum-allowed-filename-and-folder-size-with-ecryptfs\n *\n * @param  {String} input   Original filename\n * @param  {Object} options {replacement: String | Function }\n * @return {String}         Sanitized filename\n */\n\nvar truncate = require(\"truncate-utf8-bytes\");\n\nvar illegalRe = /[\\/\\?<>\\\\:\\*\\|\"]/g;\nvar controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\nvar reservedRe = /^\\.+$/;\nvar windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\nvar windowsTrailingRe = /[\\. ]+$/;\n\nfunction sanitize(input, replacement) {\n  if (typeof input !== 'string') {\n    throw new Error('Input must be string');\n  }\n  var sanitized = input\n    .replace(illegalRe, replacement)\n    .replace(controlRe, replacement)\n    .replace(reservedRe, replacement)\n    .replace(windowsReservedRe, replacement)\n    .replace(windowsTrailingRe, replacement);\n  return truncate(sanitized, 255);\n}\n\nmodule.exports = function (input, options) {\n  var replacement = (options && options.replacement) || '';\n  var output = sanitize(input, replacement);\n  if (replacement === '') {\n    return output;\n  }\n  return sanitize(output, '');\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/sanitize-filename/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/sanitize-filename/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}}],"sources":{"node_modules/sanitize-filename/index.js":"/*jshint node:true*/\n'use strict';\n\n/**\n * Replaces characters in strings that are illegal/unsafe for filenames.\n * Unsafe characters are either removed or replaced by a substitute set\n * in the optional `options` object.\n *\n * Illegal Characters on Various Operating Systems\n * / ? < > \\ : * | \"\n * https://kb.acronis.com/content/39790\n *\n * Unicode Control codes\n * C0 0x00-0x1f & C1 (0x80-0x9f)\n * http://en.wikipedia.org/wiki/C0_and_C1_control_codes\n *\n * Reserved filenames on Unix-based systems (\".\", \"..\")\n * Reserved filenames in Windows (\"CON\", \"PRN\", \"AUX\", \"NUL\", \"COM1\",\n * \"COM2\", \"COM3\", \"COM4\", \"COM5\", \"COM6\", \"COM7\", \"COM8\", \"COM9\",\n * \"LPT1\", \"LPT2\", \"LPT3\", \"LPT4\", \"LPT5\", \"LPT6\", \"LPT7\", \"LPT8\", and\n * \"LPT9\") case-insesitively and with or without filename extensions.\n *\n * Capped at 255 characters in length.\n * http://unix.stackexchange.com/questions/32795/what-is-the-maximum-allowed-filename-and-folder-size-with-ecryptfs\n *\n * @param  {String} input   Original filename\n * @param  {Object} options {replacement: String | Function }\n * @return {String}         Sanitized filename\n */\n\nvar truncate = require(\"truncate-utf8-bytes\");\n\nvar illegalRe = /[\\/\\?<>\\\\:\\*\\|\"]/g;\nvar controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\nvar reservedRe = /^\\.+$/;\nvar windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\nvar windowsTrailingRe = /[\\. ]+$/;\n\nfunction sanitize(input, replacement) {\n  if (typeof input !== 'string') {\n    throw new Error('Input must be string');\n  }\n  var sanitized = input\n    .replace(illegalRe, replacement)\n    .replace(controlRe, replacement)\n    .replace(reservedRe, replacement)\n    .replace(windowsReservedRe, replacement)\n    .replace(windowsTrailingRe, replacement);\n  return truncate(sanitized, 255);\n}\n\nmodule.exports = function (input, options) {\n  var replacement = (options && options.replacement) || '';\n  var output = sanitize(input, replacement);\n  if (replacement === '') {\n    return output;\n  }\n  return sanitize(output, '');\n};\n"},"lineCount":60}},"error":null,"hash":"cb924a80640e3393c8097fde1b6684e5","cacheData":{"env":{}}}