{"id":"node_modules/interface-datastore/src/memory.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/interface-datastore/package.json","includedInParent":true,"mtime":1604854663745},{"name":"./key","loc":{"line":3,"column":20},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/interface-datastore/src/memory.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/interface-datastore/src/key.js"},{"name":"./adapter","loc":{"line":4,"column":24},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/interface-datastore/src/memory.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/interface-datastore/src/adapter.js"},{"name":"./errors","loc":{"line":7,"column":23},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/interface-datastore/src/memory.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/interface-datastore/src/errors.js"}],"generated":{"js":"'use strict'\n\nconst Key = require('./key')\nconst Adapter = require('./adapter')\n\n// Errors\nconst Errors = require('./errors')\n\nclass MemoryDatastore extends Adapter {\n  constructor () {\n    super()\n\n    this.data = {}\n  }\n\n  async put (key, val) { // eslint-disable-line require-await\n    this.data[key.toString()] = val\n  }\n\n  async get (key) {\n    const exists = await this.has(key)\n    if (!exists) throw Errors.notFoundError()\n    return this.data[key.toString()]\n  }\n\n  async has (key) { // eslint-disable-line require-await\n    return this.data[key.toString()] !== undefined\n  }\n\n  async delete (key) { // eslint-disable-line require-await\n    delete this.data[key.toString()]\n  }\n\n  * _all () {\n    yield * Object.entries(this.data)\n      .map(([key, value]) => ({ key: new Key(key), value }))\n  }\n}\n\nmodule.exports = MemoryDatastore\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/interface-datastore/src/memory.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}}],"sources":{"node_modules/interface-datastore/src/memory.js":"'use strict'\n\nconst Key = require('./key')\nconst Adapter = require('./adapter')\n\n// Errors\nconst Errors = require('./errors')\n\nclass MemoryDatastore extends Adapter {\n  constructor () {\n    super()\n\n    this.data = {}\n  }\n\n  async put (key, val) { // eslint-disable-line require-await\n    this.data[key.toString()] = val\n  }\n\n  async get (key) {\n    const exists = await this.has(key)\n    if (!exists) throw Errors.notFoundError()\n    return this.data[key.toString()]\n  }\n\n  async has (key) { // eslint-disable-line require-await\n    return this.data[key.toString()] !== undefined\n  }\n\n  async delete (key) { // eslint-disable-line require-await\n    delete this.data[key.toString()]\n  }\n\n  * _all () {\n    yield * Object.entries(this.data)\n      .map(([key, value]) => ({ key: new Key(key), value }))\n  }\n}\n\nmodule.exports = MemoryDatastore\n"},"lineCount":41}},"error":null,"hash":"dc9523be20f0a4679b2a22e8e2a41230","cacheData":{"env":{}}}