{"id":"node_modules/multiaddr/src/convert.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/package.json","includedInParent":true,"mtime":1604854663745},{"name":"./ip","loc":{"line":3,"column":19},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/convert.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/ip.js"},{"name":"./protocols-table","loc":{"line":4,"column":26},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/convert.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/protocols-table.js"},{"name":"cids","loc":{"line":5,"column":20},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/convert.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/cids/src/index.js"},{"name":"multibase","loc":{"line":6,"column":26},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/convert.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multibase/src/index.js"},{"name":"varint","loc":{"line":7,"column":23},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/convert.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/varint/index.js"},{"name":"uint8arrays/to-string","loc":{"line":8,"column":35},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/convert.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/uint8arrays/to-string.js"},{"name":"uint8arrays/from-string","loc":{"line":9,"column":37},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/convert.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/uint8arrays/from-string.js"},{"name":"uint8arrays/concat","loc":{"line":10,"column":33},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/convert.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/uint8arrays/concat.js"}],"generated":{"js":"'use strict'\n\nconst ip = require('./ip')\nconst protocols = require('./protocols-table')\nconst CID = require('cids')\nconst multibase = require('multibase')\nconst varint = require('varint')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst uint8ArrayConcat = require('uint8arrays/concat')\n\nmodule.exports = Convert\n\n// converts (serializes) addresses\nfunction Convert (proto, a) {\n  if (a instanceof Uint8Array) {\n    return Convert.toString(proto, a)\n  } else {\n    return Convert.toBytes(proto, a)\n  }\n}\n\nConvert.toString = function convertToString (proto, buf) {\n  proto = protocols(proto)\n  switch (proto.code) {\n    case 4: // ipv4\n    case 41: // ipv6\n      return bytes2ip(buf)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return bytes2port(buf)\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return bytes2str(buf)\n\n    case 421: // ipfs\n      return bytes2mh(buf)\n    case 444: // onion\n      return bytes2onion(buf)\n    case 445: // onion3\n      return bytes2onion(buf)\n    default:\n      return uint8ArrayToString(buf, 'base16') // no clue. convert to hex\n  }\n}\n\nConvert.toBytes = function convertToBytes (proto, str) {\n  proto = protocols(proto)\n  switch (proto.code) {\n    case 4: // ipv4\n      return ip2bytes(str)\n    case 41: // ipv6\n      return ip2bytes(str)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return port2bytes(parseInt(str, 10))\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return str2bytes(str)\n\n    case 421: // ipfs\n      return mh2bytes(str)\n    case 444: // onion\n      return onion2bytes(str)\n    case 445: // onion3\n      return onion32bytes(str)\n    default:\n      return uint8ArrayFromString(str, 'base16') // no clue. convert from hex\n  }\n}\n\nfunction ip2bytes (ipString) {\n  if (!ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ip.toBytes(ipString)\n}\n\nfunction bytes2ip (ipBuff) {\n  const ipString = ip.toString(ipBuff)\n  if (!ipString || !ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ipString\n}\n\nfunction port2bytes (port) {\n  const buf = new ArrayBuffer(2)\n  const view = new DataView(buf)\n  view.setUint16(0, port)\n\n  return new Uint8Array(buf)\n}\n\nfunction bytes2port (buf) {\n  const view = new DataView(buf.buffer)\n  return view.getUint16(0)\n}\n\nfunction str2bytes (str) {\n  const buf = uint8ArrayFromString(str)\n  const size = Uint8Array.from(varint.encode(buf.length))\n  return uint8ArrayConcat([size, buf], size.length + buf.length)\n}\n\nfunction bytes2str (buf) {\n  const size = varint.decode(buf)\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(buf)\n}\n\nfunction mh2bytes (hash) {\n  // the address is a varint prefixed multihash string representation\n  const mh = new CID(hash).multihash\n  const size = Uint8Array.from(varint.encode(mh.length))\n  return uint8ArrayConcat([size, mh], size.length + mh.length)\n}\n\nfunction bytes2mh (buf) {\n  const size = varint.decode(buf)\n  const address = buf.slice(varint.decode.bytes)\n\n  if (address.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(address, 'base58btc')\n}\n\nfunction onion2bytes (str) {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\n  }\n  if (addr[0].length !== 16) {\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion address.')\n  }\n\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = multibase.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\nfunction onion32bytes (str) {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\n  }\n  if (addr[0].length !== 56) {\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion3 address.')\n  }\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = multibase.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\nfunction bytes2onion (buf) {\n  const addrBytes = buf.slice(0, buf.length - 2)\n  const portBytes = buf.slice(buf.length - 2)\n  const addr = uint8ArrayToString(addrBytes, 'base32')\n  const port = bytes2port(portBytes)\n  return addr + ':' + port\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/multiaddr/src/convert.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/multiaddr/src/convert.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}}],"sources":{"node_modules/multiaddr/src/convert.js":"'use strict'\n\nconst ip = require('./ip')\nconst protocols = require('./protocols-table')\nconst CID = require('cids')\nconst multibase = require('multibase')\nconst varint = require('varint')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst uint8ArrayConcat = require('uint8arrays/concat')\n\nmodule.exports = Convert\n\n// converts (serializes) addresses\nfunction Convert (proto, a) {\n  if (a instanceof Uint8Array) {\n    return Convert.toString(proto, a)\n  } else {\n    return Convert.toBytes(proto, a)\n  }\n}\n\nConvert.toString = function convertToString (proto, buf) {\n  proto = protocols(proto)\n  switch (proto.code) {\n    case 4: // ipv4\n    case 41: // ipv6\n      return bytes2ip(buf)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return bytes2port(buf)\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return bytes2str(buf)\n\n    case 421: // ipfs\n      return bytes2mh(buf)\n    case 444: // onion\n      return bytes2onion(buf)\n    case 445: // onion3\n      return bytes2onion(buf)\n    default:\n      return uint8ArrayToString(buf, 'base16') // no clue. convert to hex\n  }\n}\n\nConvert.toBytes = function convertToBytes (proto, str) {\n  proto = protocols(proto)\n  switch (proto.code) {\n    case 4: // ipv4\n      return ip2bytes(str)\n    case 41: // ipv6\n      return ip2bytes(str)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return port2bytes(parseInt(str, 10))\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return str2bytes(str)\n\n    case 421: // ipfs\n      return mh2bytes(str)\n    case 444: // onion\n      return onion2bytes(str)\n    case 445: // onion3\n      return onion32bytes(str)\n    default:\n      return uint8ArrayFromString(str, 'base16') // no clue. convert from hex\n  }\n}\n\nfunction ip2bytes (ipString) {\n  if (!ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ip.toBytes(ipString)\n}\n\nfunction bytes2ip (ipBuff) {\n  const ipString = ip.toString(ipBuff)\n  if (!ipString || !ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ipString\n}\n\nfunction port2bytes (port) {\n  const buf = new ArrayBuffer(2)\n  const view = new DataView(buf)\n  view.setUint16(0, port)\n\n  return new Uint8Array(buf)\n}\n\nfunction bytes2port (buf) {\n  const view = new DataView(buf.buffer)\n  return view.getUint16(0)\n}\n\nfunction str2bytes (str) {\n  const buf = uint8ArrayFromString(str)\n  const size = Uint8Array.from(varint.encode(buf.length))\n  return uint8ArrayConcat([size, buf], size.length + buf.length)\n}\n\nfunction bytes2str (buf) {\n  const size = varint.decode(buf)\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(buf)\n}\n\nfunction mh2bytes (hash) {\n  // the address is a varint prefixed multihash string representation\n  const mh = new CID(hash).multihash\n  const size = Uint8Array.from(varint.encode(mh.length))\n  return uint8ArrayConcat([size, mh], size.length + mh.length)\n}\n\nfunction bytes2mh (buf) {\n  const size = varint.decode(buf)\n  const address = buf.slice(varint.decode.bytes)\n\n  if (address.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(address, 'base58btc')\n}\n\nfunction onion2bytes (str) {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\n  }\n  if (addr[0].length !== 16) {\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion address.')\n  }\n\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = multibase.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\nfunction onion32bytes (str) {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\n  }\n  if (addr[0].length !== 56) {\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion3 address.')\n  }\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = multibase.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\nfunction bytes2onion (buf) {\n  const addrBytes = buf.slice(0, buf.length - 2)\n  const portBytes = buf.slice(buf.length - 2)\n  const addr = uint8ArrayToString(addrBytes, 'base32')\n  const port = bytes2port(portBytes)\n  return addr + ':' + port\n}\n"},"lineCount":199}},"error":null,"hash":"f0e4151961829153daf3e4db025facfa","cacheData":{"env":{}}}