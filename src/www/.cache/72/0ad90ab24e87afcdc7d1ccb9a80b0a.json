{"id":"node_modules/protons/src/compile/encodings/int32.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protons/package.json","includedInParent":true,"mtime":1604854663745},{"name":"varint","loc":{"line":3,"column":23},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protons/src/compile/encodings/int32.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/varint/index.js"},{"name":"./encoder","loc":{"line":4,"column":24},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protons/src/compile/encodings/int32.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/protons/src/compile/encodings/encoder.js"}],"generated":{"js":"'use strict'\n\nconst varint = require('varint')\nconst encoder = require('./encoder')\n\nfunction in32Encode (val, buffer, dataView, offset) {\n  varint.encode(val < 0 ? val + 4294967296 : val, buffer, offset)\n  in32Encode.bytes = varint.encode.bytes\n}\n\nfunction int32Decode (buffer, dataView, offset) {\n  const val = varint.decode(buffer, offset)\n  int32Decode.bytes = varint.decode.bytes\n\n  return val > 2147483647 ? val - 4294967296 : val\n}\n\nfunction int32EncodingLength (val) {\n  return varint.encodingLength(val < 0 ? val + 4294967296 : val)\n}\n\nmodule.exports = encoder(0, in32Encode, int32Decode, int32EncodingLength)\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/protons/src/compile/encodings/int32.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}}],"sources":{"node_modules/protons/src/compile/encodings/int32.js":"'use strict'\n\nconst varint = require('varint')\nconst encoder = require('./encoder')\n\nfunction in32Encode (val, buffer, dataView, offset) {\n  varint.encode(val < 0 ? val + 4294967296 : val, buffer, offset)\n  in32Encode.bytes = varint.encode.bytes\n}\n\nfunction int32Decode (buffer, dataView, offset) {\n  const val = varint.decode(buffer, offset)\n  int32Decode.bytes = varint.decode.bytes\n\n  return val > 2147483647 ? val - 4294967296 : val\n}\n\nfunction int32EncodingLength (val) {\n  return varint.encodingLength(val < 0 ? val + 4294967296 : val)\n}\n\nmodule.exports = encoder(0, in32Encode, int32Decode, int32EncodingLength)\n"},"lineCount":23}},"error":null,"hash":"8431aa135df60a06a4c988202f518dff","cacheData":{"env":{}}}