{"id":"node_modules/multiaddr/src/index.js","dependencies":[{"name":"/home/jacob/projects/p2p-prolog/src/www/package.json","includedInParent":true,"mtime":1604858341685},{"name":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/package.json","includedInParent":true,"mtime":1604854663745},{"name":"./codec","loc":{"line":3,"column":22},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/codec.js"},{"name":"./protocols-table","loc":{"line":4,"column":26},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/protocols-table.js"},{"name":"varint","loc":{"line":5,"column":23},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/varint/index.js"},{"name":"cids","loc":{"line":6,"column":20},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/cids/src/index.js"},{"name":"class-is","loc":{"line":7,"column":23},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/class-is/index.js"},{"name":"err-code","loc":{"line":8,"column":24},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/err-code/index.js"},{"name":"uint8arrays/to-string","loc":{"line":10,"column":35},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/uint8arrays/to-string.js"},{"name":"uint8arrays/equals","loc":{"line":11,"column":33},"parent":"/home/jacob/projects/p2p-prolog/src/www/node_modules/multiaddr/src/index.js","resolved":"/home/jacob/projects/p2p-prolog/src/www/node_modules/uint8arrays/equals.js"}],"generated":{"js":"'use strict'\n\nconst codec = require('./codec')\nconst protocols = require('./protocols-table')\nconst varint = require('varint')\nconst CID = require('cids')\nconst withIs = require('class-is')\nconst errCode = require('err-code')\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayEquals = require('uint8arrays/equals')\n\nconst resolvers = new Map()\n\n/**\n * Creates a [multiaddr](https://github.com/multiformats/multiaddr) from\n * a Uint8Array, String or another Multiaddr instance\n * public key.\n *\n * @class Multiaddr\n * @param {(string | Uint8Array | Multiaddr)} addr - If String or Uint8Array, needs to adhere\n * to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n */\nconst Multiaddr = withIs.proto(function (addr) {\n  if (!(this instanceof Multiaddr)) {\n    return new Multiaddr(addr)\n  }\n\n  // default\n  if (addr == null) {\n    addr = ''\n  }\n\n  if (addr instanceof Uint8Array) {\n    /**\n     * @type {Uint8Array} - The raw bytes representing this multiaddress\n     */\n    this.bytes = codec.fromBytes(addr)\n  } else if (typeof addr === 'string' || addr instanceof String) {\n    if (addr.length > 0 && addr.charAt(0) !== '/') {\n      throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`)\n    }\n    this.bytes = codec.fromString(addr)\n  } else if (addr.bytes && addr.protos && addr.protoCodes) { // Multiaddr\n    this.bytes = codec.fromBytes(addr.bytes) // validate + copy buffer\n  } else {\n    throw new Error('addr must be a string, Buffer, or another Multiaddr')\n  }\n}, { className: 'Multiaddr', symbolName: '@multiformats/js-multiaddr/multiaddr' })\n\n/**\n * Returns Multiaddr as a String\n *\n * @returns {string}\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').toString()\n * // '/ip4/127.0.0.1/tcp/4001'\n */\nMultiaddr.prototype.toString = function toString () {\n  return codec.bytesToString(this.bytes)\n}\n\n/**\n * Returns Multiaddr as a JSON encoded object\n *\n * @returns {string}\n * @example\n * JSON.stringify(Multiaddr('/ip4/127.0.0.1/tcp/4001'))\n * // '/ip4/127.0.0.1/tcp/4001'\n */\nMultiaddr.prototype.toJSON = Multiaddr.prototype.toString\n\n/**\n * Returns Multiaddr as a convinient options object to be used with net.createConnection\n *\n * @returns {{family: string, host: string, transport: string, port: number}}\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').toOptions()\n * // { family: 'ipv4', host: '127.0.0.1', transport: 'tcp', port: 4001 }\n */\nMultiaddr.prototype.toOptions = function toOptions () {\n  const opts = {}\n  const parsed = this.toString().split('/')\n  opts.family = parsed[1] === 'ip4' ? 'ipv4' : 'ipv6'\n  opts.host = parsed[2]\n  opts.transport = parsed[3]\n  opts.port = parseInt(parsed[4])\n  return opts\n}\n\n/**\n * Returns Multiaddr as a human-readable string.\n * For post Node.js v10.0.0.\n * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\n *\n * @returns {string}\n * @example\n * console.log(Multiaddr('/ip4/127.0.0.1/tcp/4001'))\n * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\n */\nMultiaddr.prototype[inspect] = function inspectCustom () {\n  return '<Multiaddr ' +\n    uint8ArrayToString(this.bytes, 'base16') + ' - ' +\n    codec.bytesToString(this.bytes) + '>'\n}\n\n/**\n * Returns Multiaddr as a human-readable string.\n * Fallback for pre Node.js v10.0.0.\n * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\n *\n * @returns {string}\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').inspect()\n * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\n */\nMultiaddr.prototype.inspect = function inspect () {\n  return '<Multiaddr ' +\n    uint8ArrayToString(this.bytes, 'base16') + ' - ' +\n    codec.bytesToString(this.bytes) + '>'\n}\n\n/**\n * @typedef {object} protocol\n * @property {number} code\n * @property {number} size\n * @property {string} name\n * @property {boolean} [resolvable]\n * @property {boolean} [path]\n */\n\n/**\n * Returns the protocols the Multiaddr is defined with, as an array of objects, in\n * left-to-right order. Each object contains the protocol code, protocol name,\n * and the size of its address space in bits.\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n *\n * @returns {protocol[]} protocols - All the protocols the address is composed of\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protos()\n * // [ { code: 4, size: 32, name: 'ip4' },\n * //   { code: 6, size: 16, name: 'tcp' } ]\n */\nMultiaddr.prototype.protos = function protos () {\n  return this.protoCodes().map(code => Object.assign({}, protocols(code)))\n}\n\n/**\n * Returns the codes of the protocols in left-to-right order.\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n *\n * @returns {Array<number>} protocol codes\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoCodes()\n * // [ 4, 6 ]\n */\nMultiaddr.prototype.protoCodes = function protoCodes () {\n  const codes = []\n  const buf = this.bytes\n  let i = 0\n  while (i < buf.length) {\n    const code = varint.decode(buf, i)\n    const n = varint.decode.bytes\n\n    const p = protocols(code)\n    const size = codec.sizeForAddr(p, buf.slice(i + n))\n\n    i += (size + n)\n    codes.push(code)\n  }\n\n  return codes\n}\n\n/**\n * Returns the names of the protocols in left-to-right order.\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n *\n * @returns {Array.<string>} protocol names\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoNames()\n * // [ 'ip4', 'tcp' ]\n */\nMultiaddr.prototype.protoNames = function protoNames () {\n  return this.protos().map(proto => proto.name)\n}\n\n/**\n * Returns a tuple of parts\n *\n * @returns {[number, Uint8Array][]} tuples\n * @example\n * Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").tuples()\n * // [ [ 4, <Buffer 7f 00 00 01> ], [ 6, <Buffer 0f a1> ] ]\n */\nMultiaddr.prototype.tuples = function tuples () {\n  return codec.bytesToTuples(this.bytes)\n}\n\n/**\n * Returns a tuple of string/number parts\n * - tuples[][0] = code of protocol\n * - tuples[][1] = contents of address\n *\n * @returns {[number, string|number][]} tuples\n * @example\n * Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").stringTuples()\n * // [ [ 4, '127.0.0.1' ], [ 6, 4001 ] ]\n */\nMultiaddr.prototype.stringTuples = function stringTuples () {\n  const t = codec.bytesToTuples(this.bytes)\n  return codec.tuplesToStringTuples(t)\n}\n\n/**\n * Encapsulates a Multiaddr in another Multiaddr\n *\n * @param {Multiaddr} addr - Multiaddr to add into this Multiaddr\n * @returns {Multiaddr}\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n *\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n *\n * const mh3 = mh1.encapsulate(mh2)\n * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n *\n * mh3.toString()\n * // '/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001'\n */\nMultiaddr.prototype.encapsulate = function encapsulate (addr) {\n  addr = Multiaddr(addr)\n  return Multiaddr(this.toString() + addr.toString())\n}\n\n/**\n * Decapsulates a Multiaddr from another Multiaddr\n *\n * @param {Multiaddr} addr - Multiaddr to remove from this Multiaddr\n * @returns {Multiaddr}\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n *\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n *\n * const mh3 = mh1.encapsulate(mh2)\n * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n *\n * mh3.decapsulate(mh2).toString()\n * // '/ip4/8.8.8.8/tcp/1080'\n */\nMultiaddr.prototype.decapsulate = function decapsulate (addr) {\n  addr = addr.toString()\n  const s = this.toString()\n  const i = s.lastIndexOf(addr)\n  if (i < 0) {\n    throw new Error('Address ' + this + ' does not contain subaddress: ' + addr)\n  }\n  return Multiaddr(s.slice(0, i))\n}\n\n/**\n * A more reliable version of `decapsulate` if you are targeting a\n * specific code, such as 421 (the `p2p` protocol code). The last index of the code\n * will be removed from the `Multiaddr`, and a new instance will be returned.\n * If the code is not present, the original `Multiaddr` is returned.\n *\n * @param {number} code - The code of the protocol to decapsulate from this Multiaddr\n * @returns {Multiaddr}\n * @example\n * const addr = Multiaddr('/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC')\n * // <Multiaddr 0400... - /ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC>\n *\n * addr.decapsulateCode(421).toString()\n * // '/ip4/0.0.0.0/tcp/8080'\n *\n * Multiaddr('/ip4/127.0.0.1/tcp/8080').decapsulateCode(421).toString()\n * // '/ip4/127.0.0.1/tcp/8080'\n */\nMultiaddr.prototype.decapsulateCode = function decapsulateCode (code) {\n  const tuples = this.tuples()\n  for (let i = tuples.length - 1; i >= 0; i--) {\n    if (tuples[i][0] === code) {\n      return Multiaddr(codec.tuplesToBytes(tuples.slice(0, i)))\n    }\n  }\n  return this\n}\n\n/**\n * Extract the peerId if the multiaddr contains one\n *\n * @returns {string | null} peerId - The id of the peer or null if invalid or missing from the ma\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string>\n *\n * // should return QmValidBase58string or null if the id is missing or invalid\n * const peerId = mh1.getPeerId()\n */\nMultiaddr.prototype.getPeerId = function getPeerId () {\n  let b58str = null\n  try {\n    const tuples = this.stringTuples().filter((tuple) => {\n      if (tuple[0] === protocols.names.ipfs.code) {\n        return true\n      }\n    })\n\n    // Get the last id\n    b58str = tuples.pop()[1]\n    // Get multihash, unwrap from CID if needed\n    b58str = uint8ArrayToString(new CID(b58str).multihash, 'base58btc')\n  } catch (e) {\n    b58str = null\n  }\n\n  return b58str\n}\n\n/**\n * Extract the path if the multiaddr contains one\n *\n * @returns {string | null} path - The path of the multiaddr, or null if no path protocol is present\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock>\n *\n * // should return utf8 string or null if the id is missing or invalid\n * const path = mh1.getPath()\n */\nMultiaddr.prototype.getPath = function getPath () {\n  let path = null\n  try {\n    path = this.stringTuples().filter((tuple) => {\n      const proto = protocols(tuple[0])\n      if (proto.path) {\n        return true\n      }\n    })[0][1]\n  } catch (e) {\n    path = null\n  }\n\n  return path\n}\n\n/**\n * Checks if two Multiaddrs are the same\n *\n * @param {Multiaddr} addr\n * @returns {Bool}\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n *\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n *\n * mh1.equals(mh1)\n * // true\n *\n * mh1.equals(mh2)\n * // false\n */\nMultiaddr.prototype.equals = function equals (addr) {\n  return uint8ArrayEquals(this.bytes, addr.bytes)\n}\n\n/**\n * Resolve multiaddr if containing resolvable hostname.\n *\n * @returns {Promise<Array<Multiaddr>>}\n * @example\n * Multiaddr.resolvers.set('dnsaddr', resolverFunction)\n * const mh1 = Multiaddr('/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb')\n * const resolvedMultiaddrs = await mh1.resolve()\n * // [\n * //   <Multiaddr 04934b5353060fa1a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/4001/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\n * //   <Multiaddr 04934b53530601bbde03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/443/wss/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\n * //   <Multiaddr 04934b535391020fa1cc03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/udp/4001/quic/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>\n * // ]\n */\nMultiaddr.prototype.resolve = async function resolve () {\n  const resolvableProto = this.protos().find((p) => p.resolvable)\n\n  // Multiaddr is not resolvable?\n  if (!resolvableProto) {\n    return [this]\n  }\n\n  const resolver = resolvers.get(resolvableProto.name)\n  if (!resolver) {\n    throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER')\n  }\n\n  const addresses = await resolver(this)\n  return addresses.map(a => Multiaddr(a))\n}\n\n/**\n * Gets a Multiaddrs node-friendly address object. Note that protocol information\n * is left out: in Node (and most network systems) the protocol is unknowable\n * given only the address.\n *\n * Has to be a ThinWaist Address, otherwise throws error\n *\n * @returns {{family: string, address: string, port: number}}\n * @throws {Error} Throws error if Multiaddr is not a Thin Waist address\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').nodeAddress()\n * // {family: 'IPv4', address: '127.0.0.1', port: '4001'}\n */\nMultiaddr.prototype.nodeAddress = function nodeAddress () {\n  const codes = this.protoCodes()\n  const names = this.protoNames()\n  const parts = this.toString().split('/').slice(1)\n\n  if (parts.length < 4) {\n    throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}\".')\n  } else if (codes[0] !== 4 && codes[0] !== 41 && codes[0] !== 54 && codes[0] !== 55) {\n    throw new Error(`no protocol with name: \"'${names[0]}'\". Must have a valid family name: \"{ip4, ip6, dns4, dns6}\".`)\n  } else if (parts[2] !== 'tcp' && parts[2] !== 'udp') {\n    throw new Error(`no protocol with name: \"'${names[1]}'\". Must have a valid transport protocol: \"{tcp, udp}\".`)\n  }\n\n  return {\n    family: (codes[0] === 41 || codes[0] === 55) ? 6 : 4,\n    address: parts[1], // ip addr\n    port: parseInt(parts[3]) // tcp or udp port\n  }\n}\n\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @param {{family: string, address: string, port: number}} addr\n * @param {string} transport\n * @returns {Multiaddr} multiaddr\n * @throws {Error} Throws error if addr is not truthy\n * @throws {Error} Throws error if transport is not truthy\n * @example\n * Multiaddr.fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n */\nMultiaddr.fromNodeAddress = function fromNodeAddress (addr, transport) {\n  if (!addr) throw new Error('requires node address object')\n  if (!transport) throw new Error('requires transport protocol')\n  let ip\n  switch (addr.family) {\n    case 'IPv4':\n      ip = 'ip4'\n      break\n    case 'IPv6':\n      ip = 'ip6'\n      break\n    default:\n      throw Error(`Invalid addr family. Got '${addr.family}' instead of 'IPv4' or 'IPv6'`)\n  }\n  return Multiaddr('/' + [ip, addr.address, transport, addr.port].join('/'))\n}\n\n// TODO find a better example, not sure about it's good enough\n/**\n * Returns if a Multiaddr is a Thin Waist address or not.\n *\n * Thin Waist is if a Multiaddr adheres to the standard combination of:\n *\n * `{IPv4, IPv6}/{TCP, UDP}`\n *\n * @param {Multiaddr} [addr] - Defaults to using `this` instance\n * @returns {boolean} isThinWaistAddress\n * @example\n * const mh1 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n * const mh2 = Multiaddr('/ip4/192.168.2.1/tcp/5001')\n * // <Multiaddr 04c0a80201061389 - /ip4/192.168.2.1/tcp/5001>\n * const mh3 = mh1.encapsulate(mh2)\n * // <Multiaddr 047f000001060fa104c0a80201061389 - /ip4/127.0.0.1/tcp/4001/ip4/192.168.2.1/tcp/5001>\n * mh1.isThinWaistAddress()\n * // true\n * mh2.isThinWaistAddress()\n * // true\n * mh3.isThinWaistAddress()\n * // false\n */\nMultiaddr.prototype.isThinWaistAddress = function isThinWaistAddress (addr) {\n  const protos = (addr || this).protos()\n\n  if (protos.length !== 2) {\n    return false\n  }\n\n  if (protos[0].code !== 4 && protos[0].code !== 41) {\n    return false\n  }\n  if (protos[1].code !== 6 && protos[1].code !== 273) {\n    return false\n  }\n  return true\n}\n\n/**\n * Object containing table, names and codes of all supported protocols.\n * To get the protocol values from a Multiaddr, you can use\n * [`.protos()`](#multiaddrprotos),\n * [`.protoCodes()`](#multiaddrprotocodes) or\n * [`.protoNames()`](#multiaddrprotonames)\n *\n * @instance\n * @returns {{table: Array, names: Object, codes: Object}}\n *\n */\nMultiaddr.protocols = protocols\n\n/**\n * Returns if something is a Multiaddr that is a name\n *\n * @param {Multiaddr} addr\n * @returns {Bool} isName\n */\nMultiaddr.isName = function isName (addr) {\n  if (!Multiaddr.isMultiaddr(addr)) {\n    return false\n  }\n\n  // if a part of the multiaddr is resolvable, then return true\n  return addr.protos().some((proto) => proto.resolvable)\n}\n\n/**\n * Returns an array of multiaddrs, by resolving the multiaddr that is a name\n *\n * @async\n * @param {Multiaddr} addr\n * @returns {Multiaddr[]}\n */\nMultiaddr.resolve = function resolve (addr) {\n  if (!Multiaddr.isMultiaddr(addr) || !Multiaddr.isName(addr)) {\n    return Promise.reject(Error('not a valid name'))\n  }\n\n  /*\n   * Needs more consideration from spec design:\n   *   - what to return\n   *   - how to achieve it in the browser?\n   */\n  return Promise.reject(new Error('not implemented yet'))\n}\n\nMultiaddr.resolvers = resolvers\nexports = module.exports = Multiaddr\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/multiaddr/src/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/multiaddr/src/index.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}}],"sources":{"node_modules/multiaddr/src/index.js":"'use strict'\n\nconst codec = require('./codec')\nconst protocols = require('./protocols-table')\nconst varint = require('varint')\nconst CID = require('cids')\nconst withIs = require('class-is')\nconst errCode = require('err-code')\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayEquals = require('uint8arrays/equals')\n\nconst resolvers = new Map()\n\n/**\n * Creates a [multiaddr](https://github.com/multiformats/multiaddr) from\n * a Uint8Array, String or another Multiaddr instance\n * public key.\n *\n * @class Multiaddr\n * @param {(string | Uint8Array | Multiaddr)} addr - If String or Uint8Array, needs to adhere\n * to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n */\nconst Multiaddr = withIs.proto(function (addr) {\n  if (!(this instanceof Multiaddr)) {\n    return new Multiaddr(addr)\n  }\n\n  // default\n  if (addr == null) {\n    addr = ''\n  }\n\n  if (addr instanceof Uint8Array) {\n    /**\n     * @type {Uint8Array} - The raw bytes representing this multiaddress\n     */\n    this.bytes = codec.fromBytes(addr)\n  } else if (typeof addr === 'string' || addr instanceof String) {\n    if (addr.length > 0 && addr.charAt(0) !== '/') {\n      throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`)\n    }\n    this.bytes = codec.fromString(addr)\n  } else if (addr.bytes && addr.protos && addr.protoCodes) { // Multiaddr\n    this.bytes = codec.fromBytes(addr.bytes) // validate + copy buffer\n  } else {\n    throw new Error('addr must be a string, Buffer, or another Multiaddr')\n  }\n}, { className: 'Multiaddr', symbolName: '@multiformats/js-multiaddr/multiaddr' })\n\n/**\n * Returns Multiaddr as a String\n *\n * @returns {string}\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').toString()\n * // '/ip4/127.0.0.1/tcp/4001'\n */\nMultiaddr.prototype.toString = function toString () {\n  return codec.bytesToString(this.bytes)\n}\n\n/**\n * Returns Multiaddr as a JSON encoded object\n *\n * @returns {string}\n * @example\n * JSON.stringify(Multiaddr('/ip4/127.0.0.1/tcp/4001'))\n * // '/ip4/127.0.0.1/tcp/4001'\n */\nMultiaddr.prototype.toJSON = Multiaddr.prototype.toString\n\n/**\n * Returns Multiaddr as a convinient options object to be used with net.createConnection\n *\n * @returns {{family: string, host: string, transport: string, port: number}}\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').toOptions()\n * // { family: 'ipv4', host: '127.0.0.1', transport: 'tcp', port: 4001 }\n */\nMultiaddr.prototype.toOptions = function toOptions () {\n  const opts = {}\n  const parsed = this.toString().split('/')\n  opts.family = parsed[1] === 'ip4' ? 'ipv4' : 'ipv6'\n  opts.host = parsed[2]\n  opts.transport = parsed[3]\n  opts.port = parseInt(parsed[4])\n  return opts\n}\n\n/**\n * Returns Multiaddr as a human-readable string.\n * For post Node.js v10.0.0.\n * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\n *\n * @returns {string}\n * @example\n * console.log(Multiaddr('/ip4/127.0.0.1/tcp/4001'))\n * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\n */\nMultiaddr.prototype[inspect] = function inspectCustom () {\n  return '<Multiaddr ' +\n    uint8ArrayToString(this.bytes, 'base16') + ' - ' +\n    codec.bytesToString(this.bytes) + '>'\n}\n\n/**\n * Returns Multiaddr as a human-readable string.\n * Fallback for pre Node.js v10.0.0.\n * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\n *\n * @returns {string}\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').inspect()\n * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\n */\nMultiaddr.prototype.inspect = function inspect () {\n  return '<Multiaddr ' +\n    uint8ArrayToString(this.bytes, 'base16') + ' - ' +\n    codec.bytesToString(this.bytes) + '>'\n}\n\n/**\n * @typedef {object} protocol\n * @property {number} code\n * @property {number} size\n * @property {string} name\n * @property {boolean} [resolvable]\n * @property {boolean} [path]\n */\n\n/**\n * Returns the protocols the Multiaddr is defined with, as an array of objects, in\n * left-to-right order. Each object contains the protocol code, protocol name,\n * and the size of its address space in bits.\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n *\n * @returns {protocol[]} protocols - All the protocols the address is composed of\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protos()\n * // [ { code: 4, size: 32, name: 'ip4' },\n * //   { code: 6, size: 16, name: 'tcp' } ]\n */\nMultiaddr.prototype.protos = function protos () {\n  return this.protoCodes().map(code => Object.assign({}, protocols(code)))\n}\n\n/**\n * Returns the codes of the protocols in left-to-right order.\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n *\n * @returns {Array<number>} protocol codes\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoCodes()\n * // [ 4, 6 ]\n */\nMultiaddr.prototype.protoCodes = function protoCodes () {\n  const codes = []\n  const buf = this.bytes\n  let i = 0\n  while (i < buf.length) {\n    const code = varint.decode(buf, i)\n    const n = varint.decode.bytes\n\n    const p = protocols(code)\n    const size = codec.sizeForAddr(p, buf.slice(i + n))\n\n    i += (size + n)\n    codes.push(code)\n  }\n\n  return codes\n}\n\n/**\n * Returns the names of the protocols in left-to-right order.\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n *\n * @returns {Array.<string>} protocol names\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoNames()\n * // [ 'ip4', 'tcp' ]\n */\nMultiaddr.prototype.protoNames = function protoNames () {\n  return this.protos().map(proto => proto.name)\n}\n\n/**\n * Returns a tuple of parts\n *\n * @returns {[number, Uint8Array][]} tuples\n * @example\n * Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").tuples()\n * // [ [ 4, <Buffer 7f 00 00 01> ], [ 6, <Buffer 0f a1> ] ]\n */\nMultiaddr.prototype.tuples = function tuples () {\n  return codec.bytesToTuples(this.bytes)\n}\n\n/**\n * Returns a tuple of string/number parts\n * - tuples[][0] = code of protocol\n * - tuples[][1] = contents of address\n *\n * @returns {[number, string|number][]} tuples\n * @example\n * Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").stringTuples()\n * // [ [ 4, '127.0.0.1' ], [ 6, 4001 ] ]\n */\nMultiaddr.prototype.stringTuples = function stringTuples () {\n  const t = codec.bytesToTuples(this.bytes)\n  return codec.tuplesToStringTuples(t)\n}\n\n/**\n * Encapsulates a Multiaddr in another Multiaddr\n *\n * @param {Multiaddr} addr - Multiaddr to add into this Multiaddr\n * @returns {Multiaddr}\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n *\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n *\n * const mh3 = mh1.encapsulate(mh2)\n * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n *\n * mh3.toString()\n * // '/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001'\n */\nMultiaddr.prototype.encapsulate = function encapsulate (addr) {\n  addr = Multiaddr(addr)\n  return Multiaddr(this.toString() + addr.toString())\n}\n\n/**\n * Decapsulates a Multiaddr from another Multiaddr\n *\n * @param {Multiaddr} addr - Multiaddr to remove from this Multiaddr\n * @returns {Multiaddr}\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n *\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n *\n * const mh3 = mh1.encapsulate(mh2)\n * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n *\n * mh3.decapsulate(mh2).toString()\n * // '/ip4/8.8.8.8/tcp/1080'\n */\nMultiaddr.prototype.decapsulate = function decapsulate (addr) {\n  addr = addr.toString()\n  const s = this.toString()\n  const i = s.lastIndexOf(addr)\n  if (i < 0) {\n    throw new Error('Address ' + this + ' does not contain subaddress: ' + addr)\n  }\n  return Multiaddr(s.slice(0, i))\n}\n\n/**\n * A more reliable version of `decapsulate` if you are targeting a\n * specific code, such as 421 (the `p2p` protocol code). The last index of the code\n * will be removed from the `Multiaddr`, and a new instance will be returned.\n * If the code is not present, the original `Multiaddr` is returned.\n *\n * @param {number} code - The code of the protocol to decapsulate from this Multiaddr\n * @returns {Multiaddr}\n * @example\n * const addr = Multiaddr('/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC')\n * // <Multiaddr 0400... - /ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC>\n *\n * addr.decapsulateCode(421).toString()\n * // '/ip4/0.0.0.0/tcp/8080'\n *\n * Multiaddr('/ip4/127.0.0.1/tcp/8080').decapsulateCode(421).toString()\n * // '/ip4/127.0.0.1/tcp/8080'\n */\nMultiaddr.prototype.decapsulateCode = function decapsulateCode (code) {\n  const tuples = this.tuples()\n  for (let i = tuples.length - 1; i >= 0; i--) {\n    if (tuples[i][0] === code) {\n      return Multiaddr(codec.tuplesToBytes(tuples.slice(0, i)))\n    }\n  }\n  return this\n}\n\n/**\n * Extract the peerId if the multiaddr contains one\n *\n * @returns {string | null} peerId - The id of the peer or null if invalid or missing from the ma\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string>\n *\n * // should return QmValidBase58string or null if the id is missing or invalid\n * const peerId = mh1.getPeerId()\n */\nMultiaddr.prototype.getPeerId = function getPeerId () {\n  let b58str = null\n  try {\n    const tuples = this.stringTuples().filter((tuple) => {\n      if (tuple[0] === protocols.names.ipfs.code) {\n        return true\n      }\n    })\n\n    // Get the last id\n    b58str = tuples.pop()[1]\n    // Get multihash, unwrap from CID if needed\n    b58str = uint8ArrayToString(new CID(b58str).multihash, 'base58btc')\n  } catch (e) {\n    b58str = null\n  }\n\n  return b58str\n}\n\n/**\n * Extract the path if the multiaddr contains one\n *\n * @returns {string | null} path - The path of the multiaddr, or null if no path protocol is present\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock>\n *\n * // should return utf8 string or null if the id is missing or invalid\n * const path = mh1.getPath()\n */\nMultiaddr.prototype.getPath = function getPath () {\n  let path = null\n  try {\n    path = this.stringTuples().filter((tuple) => {\n      const proto = protocols(tuple[0])\n      if (proto.path) {\n        return true\n      }\n    })[0][1]\n  } catch (e) {\n    path = null\n  }\n\n  return path\n}\n\n/**\n * Checks if two Multiaddrs are the same\n *\n * @param {Multiaddr} addr\n * @returns {Bool}\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n *\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n *\n * mh1.equals(mh1)\n * // true\n *\n * mh1.equals(mh2)\n * // false\n */\nMultiaddr.prototype.equals = function equals (addr) {\n  return uint8ArrayEquals(this.bytes, addr.bytes)\n}\n\n/**\n * Resolve multiaddr if containing resolvable hostname.\n *\n * @returns {Promise<Array<Multiaddr>>}\n * @example\n * Multiaddr.resolvers.set('dnsaddr', resolverFunction)\n * const mh1 = Multiaddr('/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb')\n * const resolvedMultiaddrs = await mh1.resolve()\n * // [\n * //   <Multiaddr 04934b5353060fa1a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/4001/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\n * //   <Multiaddr 04934b53530601bbde03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/443/wss/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\n * //   <Multiaddr 04934b535391020fa1cc03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/udp/4001/quic/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>\n * // ]\n */\nMultiaddr.prototype.resolve = async function resolve () {\n  const resolvableProto = this.protos().find((p) => p.resolvable)\n\n  // Multiaddr is not resolvable?\n  if (!resolvableProto) {\n    return [this]\n  }\n\n  const resolver = resolvers.get(resolvableProto.name)\n  if (!resolver) {\n    throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER')\n  }\n\n  const addresses = await resolver(this)\n  return addresses.map(a => Multiaddr(a))\n}\n\n/**\n * Gets a Multiaddrs node-friendly address object. Note that protocol information\n * is left out: in Node (and most network systems) the protocol is unknowable\n * given only the address.\n *\n * Has to be a ThinWaist Address, otherwise throws error\n *\n * @returns {{family: string, address: string, port: number}}\n * @throws {Error} Throws error if Multiaddr is not a Thin Waist address\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').nodeAddress()\n * // {family: 'IPv4', address: '127.0.0.1', port: '4001'}\n */\nMultiaddr.prototype.nodeAddress = function nodeAddress () {\n  const codes = this.protoCodes()\n  const names = this.protoNames()\n  const parts = this.toString().split('/').slice(1)\n\n  if (parts.length < 4) {\n    throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}\".')\n  } else if (codes[0] !== 4 && codes[0] !== 41 && codes[0] !== 54 && codes[0] !== 55) {\n    throw new Error(`no protocol with name: \"'${names[0]}'\". Must have a valid family name: \"{ip4, ip6, dns4, dns6}\".`)\n  } else if (parts[2] !== 'tcp' && parts[2] !== 'udp') {\n    throw new Error(`no protocol with name: \"'${names[1]}'\". Must have a valid transport protocol: \"{tcp, udp}\".`)\n  }\n\n  return {\n    family: (codes[0] === 41 || codes[0] === 55) ? 6 : 4,\n    address: parts[1], // ip addr\n    port: parseInt(parts[3]) // tcp or udp port\n  }\n}\n\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @param {{family: string, address: string, port: number}} addr\n * @param {string} transport\n * @returns {Multiaddr} multiaddr\n * @throws {Error} Throws error if addr is not truthy\n * @throws {Error} Throws error if transport is not truthy\n * @example\n * Multiaddr.fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n */\nMultiaddr.fromNodeAddress = function fromNodeAddress (addr, transport) {\n  if (!addr) throw new Error('requires node address object')\n  if (!transport) throw new Error('requires transport protocol')\n  let ip\n  switch (addr.family) {\n    case 'IPv4':\n      ip = 'ip4'\n      break\n    case 'IPv6':\n      ip = 'ip6'\n      break\n    default:\n      throw Error(`Invalid addr family. Got '${addr.family}' instead of 'IPv4' or 'IPv6'`)\n  }\n  return Multiaddr('/' + [ip, addr.address, transport, addr.port].join('/'))\n}\n\n// TODO find a better example, not sure about it's good enough\n/**\n * Returns if a Multiaddr is a Thin Waist address or not.\n *\n * Thin Waist is if a Multiaddr adheres to the standard combination of:\n *\n * `{IPv4, IPv6}/{TCP, UDP}`\n *\n * @param {Multiaddr} [addr] - Defaults to using `this` instance\n * @returns {boolean} isThinWaistAddress\n * @example\n * const mh1 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n * const mh2 = Multiaddr('/ip4/192.168.2.1/tcp/5001')\n * // <Multiaddr 04c0a80201061389 - /ip4/192.168.2.1/tcp/5001>\n * const mh3 = mh1.encapsulate(mh2)\n * // <Multiaddr 047f000001060fa104c0a80201061389 - /ip4/127.0.0.1/tcp/4001/ip4/192.168.2.1/tcp/5001>\n * mh1.isThinWaistAddress()\n * // true\n * mh2.isThinWaistAddress()\n * // true\n * mh3.isThinWaistAddress()\n * // false\n */\nMultiaddr.prototype.isThinWaistAddress = function isThinWaistAddress (addr) {\n  const protos = (addr || this).protos()\n\n  if (protos.length !== 2) {\n    return false\n  }\n\n  if (protos[0].code !== 4 && protos[0].code !== 41) {\n    return false\n  }\n  if (protos[1].code !== 6 && protos[1].code !== 273) {\n    return false\n  }\n  return true\n}\n\n/**\n * Object containing table, names and codes of all supported protocols.\n * To get the protocol values from a Multiaddr, you can use\n * [`.protos()`](#multiaddrprotos),\n * [`.protoCodes()`](#multiaddrprotocodes) or\n * [`.protoNames()`](#multiaddrprotonames)\n *\n * @instance\n * @returns {{table: Array, names: Object, codes: Object}}\n *\n */\nMultiaddr.protocols = protocols\n\n/**\n * Returns if something is a Multiaddr that is a name\n *\n * @param {Multiaddr} addr\n * @returns {Bool} isName\n */\nMultiaddr.isName = function isName (addr) {\n  if (!Multiaddr.isMultiaddr(addr)) {\n    return false\n  }\n\n  // if a part of the multiaddr is resolvable, then return true\n  return addr.protos().some((proto) => proto.resolvable)\n}\n\n/**\n * Returns an array of multiaddrs, by resolving the multiaddr that is a name\n *\n * @async\n * @param {Multiaddr} addr\n * @returns {Multiaddr[]}\n */\nMultiaddr.resolve = function resolve (addr) {\n  if (!Multiaddr.isMultiaddr(addr) || !Multiaddr.isName(addr)) {\n    return Promise.reject(Error('not a valid name'))\n  }\n\n  /*\n   * Needs more consideration from spec design:\n   *   - what to return\n   *   - how to achieve it in the browser?\n   */\n  return Promise.reject(new Error('not implemented yet'))\n}\n\nMultiaddr.resolvers = resolvers\nexports = module.exports = Multiaddr\n"},"lineCount":560}},"error":null,"hash":"243a615dd67c98ee0413dd44a13db2eb","cacheData":{"env":{}}}